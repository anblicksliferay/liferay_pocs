/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.delphi.userprofile.service.base;

import com.delphi.userprofile.model.UserAccessRequest;
import com.delphi.userprofile.service.UserAccessRequestService;
import com.delphi.userprofile.service.persistence.AdminTasksPersistence;
import com.delphi.userprofile.service.persistence.UserAccessRequestPersistence;
import com.delphi.userprofile.service.persistence.UserProfilePersistence;

import com.liferay.portal.kernel.bean.BeanReference;
import com.liferay.portal.kernel.dao.db.DB;
import com.liferay.portal.kernel.dao.db.DBManagerUtil;
import com.liferay.portal.kernel.dao.jdbc.SqlUpdate;
import com.liferay.portal.kernel.dao.jdbc.SqlUpdateFactoryUtil;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.module.framework.service.IdentifiableOSGiService;
import com.liferay.portal.kernel.service.BaseServiceImpl;
import com.liferay.portal.kernel.service.persistence.ClassNamePersistence;
import com.liferay.portal.kernel.service.persistence.UserPersistence;
import com.liferay.portal.kernel.util.PortalUtil;
import com.liferay.portal.spring.extender.service.ServiceReference;

import javax.sql.DataSource;

/**
 * Provides the base implementation for the user access request remote service.
 *
 * <p>
 * This implementation exists only as a container for the default service methods generated by ServiceBuilder. All custom service methods should be put in {@link com.delphi.userprofile.service.impl.UserAccessRequestServiceImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see com.delphi.userprofile.service.impl.UserAccessRequestServiceImpl
 * @see com.delphi.userprofile.service.UserAccessRequestServiceUtil
 * @generated
 */
public abstract class UserAccessRequestServiceBaseImpl extends BaseServiceImpl
	implements UserAccessRequestService, IdentifiableOSGiService {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. Always use {@link com.delphi.userprofile.service.UserAccessRequestServiceUtil} to access the user access request remote service.
	 */

	/**
	 * Returns the admin tasks local service.
	 *
	 * @return the admin tasks local service
	 */
	public com.delphi.userprofile.service.AdminTasksLocalService getAdminTasksLocalService() {
		return adminTasksLocalService;
	}

	/**
	 * Sets the admin tasks local service.
	 *
	 * @param adminTasksLocalService the admin tasks local service
	 */
	public void setAdminTasksLocalService(
		com.delphi.userprofile.service.AdminTasksLocalService adminTasksLocalService) {
		this.adminTasksLocalService = adminTasksLocalService;
	}

	/**
	 * Returns the admin tasks remote service.
	 *
	 * @return the admin tasks remote service
	 */
	public com.delphi.userprofile.service.AdminTasksService getAdminTasksService() {
		return adminTasksService;
	}

	/**
	 * Sets the admin tasks remote service.
	 *
	 * @param adminTasksService the admin tasks remote service
	 */
	public void setAdminTasksService(
		com.delphi.userprofile.service.AdminTasksService adminTasksService) {
		this.adminTasksService = adminTasksService;
	}

	/**
	 * Returns the admin tasks persistence.
	 *
	 * @return the admin tasks persistence
	 */
	public AdminTasksPersistence getAdminTasksPersistence() {
		return adminTasksPersistence;
	}

	/**
	 * Sets the admin tasks persistence.
	 *
	 * @param adminTasksPersistence the admin tasks persistence
	 */
	public void setAdminTasksPersistence(
		AdminTasksPersistence adminTasksPersistence) {
		this.adminTasksPersistence = adminTasksPersistence;
	}

	/**
	 * Returns the user access request local service.
	 *
	 * @return the user access request local service
	 */
	public com.delphi.userprofile.service.UserAccessRequestLocalService getUserAccessRequestLocalService() {
		return userAccessRequestLocalService;
	}

	/**
	 * Sets the user access request local service.
	 *
	 * @param userAccessRequestLocalService the user access request local service
	 */
	public void setUserAccessRequestLocalService(
		com.delphi.userprofile.service.UserAccessRequestLocalService userAccessRequestLocalService) {
		this.userAccessRequestLocalService = userAccessRequestLocalService;
	}

	/**
	 * Returns the user access request remote service.
	 *
	 * @return the user access request remote service
	 */
	public UserAccessRequestService getUserAccessRequestService() {
		return userAccessRequestService;
	}

	/**
	 * Sets the user access request remote service.
	 *
	 * @param userAccessRequestService the user access request remote service
	 */
	public void setUserAccessRequestService(
		UserAccessRequestService userAccessRequestService) {
		this.userAccessRequestService = userAccessRequestService;
	}

	/**
	 * Returns the user access request persistence.
	 *
	 * @return the user access request persistence
	 */
	public UserAccessRequestPersistence getUserAccessRequestPersistence() {
		return userAccessRequestPersistence;
	}

	/**
	 * Sets the user access request persistence.
	 *
	 * @param userAccessRequestPersistence the user access request persistence
	 */
	public void setUserAccessRequestPersistence(
		UserAccessRequestPersistence userAccessRequestPersistence) {
		this.userAccessRequestPersistence = userAccessRequestPersistence;
	}

	/**
	 * Returns the user profile local service.
	 *
	 * @return the user profile local service
	 */
	public com.delphi.userprofile.service.UserProfileLocalService getUserProfileLocalService() {
		return userProfileLocalService;
	}

	/**
	 * Sets the user profile local service.
	 *
	 * @param userProfileLocalService the user profile local service
	 */
	public void setUserProfileLocalService(
		com.delphi.userprofile.service.UserProfileLocalService userProfileLocalService) {
		this.userProfileLocalService = userProfileLocalService;
	}

	/**
	 * Returns the user profile remote service.
	 *
	 * @return the user profile remote service
	 */
	public com.delphi.userprofile.service.UserProfileService getUserProfileService() {
		return userProfileService;
	}

	/**
	 * Sets the user profile remote service.
	 *
	 * @param userProfileService the user profile remote service
	 */
	public void setUserProfileService(
		com.delphi.userprofile.service.UserProfileService userProfileService) {
		this.userProfileService = userProfileService;
	}

	/**
	 * Returns the user profile persistence.
	 *
	 * @return the user profile persistence
	 */
	public UserProfilePersistence getUserProfilePersistence() {
		return userProfilePersistence;
	}

	/**
	 * Sets the user profile persistence.
	 *
	 * @param userProfilePersistence the user profile persistence
	 */
	public void setUserProfilePersistence(
		UserProfilePersistence userProfilePersistence) {
		this.userProfilePersistence = userProfilePersistence;
	}

	/**
	 * Returns the counter local service.
	 *
	 * @return the counter local service
	 */
	public com.liferay.counter.kernel.service.CounterLocalService getCounterLocalService() {
		return counterLocalService;
	}

	/**
	 * Sets the counter local service.
	 *
	 * @param counterLocalService the counter local service
	 */
	public void setCounterLocalService(
		com.liferay.counter.kernel.service.CounterLocalService counterLocalService) {
		this.counterLocalService = counterLocalService;
	}

	/**
	 * Returns the class name local service.
	 *
	 * @return the class name local service
	 */
	public com.liferay.portal.kernel.service.ClassNameLocalService getClassNameLocalService() {
		return classNameLocalService;
	}

	/**
	 * Sets the class name local service.
	 *
	 * @param classNameLocalService the class name local service
	 */
	public void setClassNameLocalService(
		com.liferay.portal.kernel.service.ClassNameLocalService classNameLocalService) {
		this.classNameLocalService = classNameLocalService;
	}

	/**
	 * Returns the class name remote service.
	 *
	 * @return the class name remote service
	 */
	public com.liferay.portal.kernel.service.ClassNameService getClassNameService() {
		return classNameService;
	}

	/**
	 * Sets the class name remote service.
	 *
	 * @param classNameService the class name remote service
	 */
	public void setClassNameService(
		com.liferay.portal.kernel.service.ClassNameService classNameService) {
		this.classNameService = classNameService;
	}

	/**
	 * Returns the class name persistence.
	 *
	 * @return the class name persistence
	 */
	public ClassNamePersistence getClassNamePersistence() {
		return classNamePersistence;
	}

	/**
	 * Sets the class name persistence.
	 *
	 * @param classNamePersistence the class name persistence
	 */
	public void setClassNamePersistence(
		ClassNamePersistence classNamePersistence) {
		this.classNamePersistence = classNamePersistence;
	}

	/**
	 * Returns the resource local service.
	 *
	 * @return the resource local service
	 */
	public com.liferay.portal.kernel.service.ResourceLocalService getResourceLocalService() {
		return resourceLocalService;
	}

	/**
	 * Sets the resource local service.
	 *
	 * @param resourceLocalService the resource local service
	 */
	public void setResourceLocalService(
		com.liferay.portal.kernel.service.ResourceLocalService resourceLocalService) {
		this.resourceLocalService = resourceLocalService;
	}

	/**
	 * Returns the user local service.
	 *
	 * @return the user local service
	 */
	public com.liferay.portal.kernel.service.UserLocalService getUserLocalService() {
		return userLocalService;
	}

	/**
	 * Sets the user local service.
	 *
	 * @param userLocalService the user local service
	 */
	public void setUserLocalService(
		com.liferay.portal.kernel.service.UserLocalService userLocalService) {
		this.userLocalService = userLocalService;
	}

	/**
	 * Returns the user remote service.
	 *
	 * @return the user remote service
	 */
	public com.liferay.portal.kernel.service.UserService getUserService() {
		return userService;
	}

	/**
	 * Sets the user remote service.
	 *
	 * @param userService the user remote service
	 */
	public void setUserService(
		com.liferay.portal.kernel.service.UserService userService) {
		this.userService = userService;
	}

	/**
	 * Returns the user persistence.
	 *
	 * @return the user persistence
	 */
	public UserPersistence getUserPersistence() {
		return userPersistence;
	}

	/**
	 * Sets the user persistence.
	 *
	 * @param userPersistence the user persistence
	 */
	public void setUserPersistence(UserPersistence userPersistence) {
		this.userPersistence = userPersistence;
	}

	public void afterPropertiesSet() {
	}

	public void destroy() {
	}

	/**
	 * Returns the OSGi service identifier.
	 *
	 * @return the OSGi service identifier
	 */
	@Override
	public String getOSGiServiceIdentifier() {
		return UserAccessRequestService.class.getName();
	}

	protected Class<?> getModelClass() {
		return UserAccessRequest.class;
	}

	protected String getModelClassName() {
		return UserAccessRequest.class.getName();
	}

	/**
	 * Performs a SQL query.
	 *
	 * @param sql the sql query
	 */
	protected void runSQL(String sql) {
		try {
			DataSource dataSource = userAccessRequestPersistence.getDataSource();

			DB db = DBManagerUtil.getDB();

			sql = db.buildSQL(sql);
			sql = PortalUtil.transformSQL(sql);

			SqlUpdate sqlUpdate = SqlUpdateFactoryUtil.getSqlUpdate(dataSource,
					sql);

			sqlUpdate.update();
		}
		catch (Exception e) {
			throw new SystemException(e);
		}
	}

	@BeanReference(type = com.delphi.userprofile.service.AdminTasksLocalService.class)
	protected com.delphi.userprofile.service.AdminTasksLocalService adminTasksLocalService;
	@BeanReference(type = com.delphi.userprofile.service.AdminTasksService.class)
	protected com.delphi.userprofile.service.AdminTasksService adminTasksService;
	@BeanReference(type = AdminTasksPersistence.class)
	protected AdminTasksPersistence adminTasksPersistence;
	@BeanReference(type = com.delphi.userprofile.service.UserAccessRequestLocalService.class)
	protected com.delphi.userprofile.service.UserAccessRequestLocalService userAccessRequestLocalService;
	@BeanReference(type = UserAccessRequestService.class)
	protected UserAccessRequestService userAccessRequestService;
	@BeanReference(type = UserAccessRequestPersistence.class)
	protected UserAccessRequestPersistence userAccessRequestPersistence;
	@BeanReference(type = com.delphi.userprofile.service.UserProfileLocalService.class)
	protected com.delphi.userprofile.service.UserProfileLocalService userProfileLocalService;
	@BeanReference(type = com.delphi.userprofile.service.UserProfileService.class)
	protected com.delphi.userprofile.service.UserProfileService userProfileService;
	@BeanReference(type = UserProfilePersistence.class)
	protected UserProfilePersistence userProfilePersistence;
	@ServiceReference(type = com.liferay.counter.kernel.service.CounterLocalService.class)
	protected com.liferay.counter.kernel.service.CounterLocalService counterLocalService;
	@ServiceReference(type = com.liferay.portal.kernel.service.ClassNameLocalService.class)
	protected com.liferay.portal.kernel.service.ClassNameLocalService classNameLocalService;
	@ServiceReference(type = com.liferay.portal.kernel.service.ClassNameService.class)
	protected com.liferay.portal.kernel.service.ClassNameService classNameService;
	@ServiceReference(type = ClassNamePersistence.class)
	protected ClassNamePersistence classNamePersistence;
	@ServiceReference(type = com.liferay.portal.kernel.service.ResourceLocalService.class)
	protected com.liferay.portal.kernel.service.ResourceLocalService resourceLocalService;
	@ServiceReference(type = com.liferay.portal.kernel.service.UserLocalService.class)
	protected com.liferay.portal.kernel.service.UserLocalService userLocalService;
	@ServiceReference(type = com.liferay.portal.kernel.service.UserService.class)
	protected com.liferay.portal.kernel.service.UserService userService;
	@ServiceReference(type = UserPersistence.class)
	protected UserPersistence userPersistence;
}