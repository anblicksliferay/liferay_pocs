/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.ys.hmawfm.wfms.services.model.impl;

import aQute.bnd.annotation.ProviderType;

import com.liferay.expando.kernel.model.ExpandoBridge;
import com.liferay.expando.kernel.util.ExpandoBridgeFactoryUtil;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.service.ServiceContext;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;

import com.ys.hmawfm.wfms.services.model.WFMS_NotificationEngine;
import com.ys.hmawfm.wfms.services.model.WFMS_NotificationEngineModel;
import com.ys.hmawfm.wfms.services.model.WFMS_NotificationEngineSoap;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the WFMS_NotificationEngine service. Represents a row in the &quot;WFMS_NotificationEngine&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link WFMS_NotificationEngineModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link WFMS_NotificationEngineImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see WFMS_NotificationEngineImpl
 * @see WFMS_NotificationEngine
 * @see WFMS_NotificationEngineModel
 * @generated
 */
@JSON(strict = true)
@ProviderType
public class WFMS_NotificationEngineModelImpl extends BaseModelImpl<WFMS_NotificationEngine>
	implements WFMS_NotificationEngineModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a WFMS_NotificationEngine model instance should use the {@link WFMS_NotificationEngine} interface instead.
	 */
	public static final String TABLE_NAME = "WFMS_NotificationEngine";
	public static final Object[][] TABLE_COLUMNS = {
			{ "templateId", Types.BIGINT },
			{ "companyId", Types.BIGINT },
			{ "scopeGroupId", Types.BIGINT },
			{ "createdBy", Types.VARCHAR },
			{ "createDate", Types.TIMESTAMP },
			{ "modifiedBy", Types.VARCHAR },
			{ "modifiedDate", Types.TIMESTAMP },
			{ "title", Types.VARCHAR },
			{ "content", Types.VARCHAR },
			{ "contentType", Types.VARCHAR },
			{ "comments", Types.VARCHAR },
			{ "timesUsed", Types.INTEGER }
		};
	public static final Map<String, Integer> TABLE_COLUMNS_MAP = new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("templateId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("companyId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("scopeGroupId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("createdBy", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("createDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("modifiedBy", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("modifiedDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("title", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("content", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("contentType", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("comments", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("timesUsed", Types.INTEGER);
	}

	public static final String TABLE_SQL_CREATE = "create table WFMS_NotificationEngine (templateId LONG not null primary key,companyId LONG,scopeGroupId LONG,createdBy VARCHAR(75) null,createDate DATE null,modifiedBy VARCHAR(75) null,modifiedDate DATE null,title VARCHAR(75) null,content VARCHAR(75) null,contentType VARCHAR(75) null,comments VARCHAR(75) null,timesUsed INTEGER)";
	public static final String TABLE_SQL_DROP = "drop table WFMS_NotificationEngine";
	public static final String ORDER_BY_JPQL = " ORDER BY wfms_NotificationEngine.templateId ASC";
	public static final String ORDER_BY_SQL = " ORDER BY WFMS_NotificationEngine.templateId ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.ys.hmawfm.wfms.services.service.util.ServiceProps.get(
				"value.object.entity.cache.enabled.com.ys.hmawfm.wfms.services.model.WFMS_NotificationEngine"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.ys.hmawfm.wfms.services.service.util.ServiceProps.get(
				"value.object.finder.cache.enabled.com.ys.hmawfm.wfms.services.model.WFMS_NotificationEngine"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.ys.hmawfm.wfms.services.service.util.ServiceProps.get(
				"value.object.column.bitmask.enabled.com.ys.hmawfm.wfms.services.model.WFMS_NotificationEngine"),
			true);
	public static final long CONTENT_COLUMN_BITMASK = 1L;
	public static final long CONTENTTYPE_COLUMN_BITMASK = 2L;
	public static final long CREATEDBY_COLUMN_BITMASK = 4L;
	public static final long TITLE_COLUMN_BITMASK = 8L;
	public static final long TEMPLATEID_COLUMN_BITMASK = 16L;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static WFMS_NotificationEngine toModel(
		WFMS_NotificationEngineSoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		WFMS_NotificationEngine model = new WFMS_NotificationEngineImpl();

		model.setTemplateId(soapModel.getTemplateId());
		model.setCompanyId(soapModel.getCompanyId());
		model.setScopeGroupId(soapModel.getScopeGroupId());
		model.setCreatedBy(soapModel.getCreatedBy());
		model.setCreateDate(soapModel.getCreateDate());
		model.setModifiedBy(soapModel.getModifiedBy());
		model.setModifiedDate(soapModel.getModifiedDate());
		model.setTitle(soapModel.getTitle());
		model.setContent(soapModel.getContent());
		model.setContentType(soapModel.getContentType());
		model.setComments(soapModel.getComments());
		model.setTimesUsed(soapModel.getTimesUsed());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<WFMS_NotificationEngine> toModels(
		WFMS_NotificationEngineSoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<WFMS_NotificationEngine> models = new ArrayList<WFMS_NotificationEngine>(soapModels.length);

		for (WFMS_NotificationEngineSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.ys.hmawfm.wfms.services.service.util.ServiceProps.get(
				"lock.expiration.time.com.ys.hmawfm.wfms.services.model.WFMS_NotificationEngine"));

	public WFMS_NotificationEngineModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _templateId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setTemplateId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _templateId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return WFMS_NotificationEngine.class;
	}

	@Override
	public String getModelClassName() {
		return WFMS_NotificationEngine.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("templateId", getTemplateId());
		attributes.put("companyId", getCompanyId());
		attributes.put("scopeGroupId", getScopeGroupId());
		attributes.put("createdBy", getCreatedBy());
		attributes.put("createDate", getCreateDate());
		attributes.put("modifiedBy", getModifiedBy());
		attributes.put("modifiedDate", getModifiedDate());
		attributes.put("title", getTitle());
		attributes.put("content", getContent());
		attributes.put("contentType", getContentType());
		attributes.put("comments", getComments());
		attributes.put("timesUsed", getTimesUsed());

		attributes.put("entityCacheEnabled", isEntityCacheEnabled());
		attributes.put("finderCacheEnabled", isFinderCacheEnabled());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long templateId = (Long)attributes.get("templateId");

		if (templateId != null) {
			setTemplateId(templateId);
		}

		Long companyId = (Long)attributes.get("companyId");

		if (companyId != null) {
			setCompanyId(companyId);
		}

		Long scopeGroupId = (Long)attributes.get("scopeGroupId");

		if (scopeGroupId != null) {
			setScopeGroupId(scopeGroupId);
		}

		String createdBy = (String)attributes.get("createdBy");

		if (createdBy != null) {
			setCreatedBy(createdBy);
		}

		Date createDate = (Date)attributes.get("createDate");

		if (createDate != null) {
			setCreateDate(createDate);
		}

		String modifiedBy = (String)attributes.get("modifiedBy");

		if (modifiedBy != null) {
			setModifiedBy(modifiedBy);
		}

		Date modifiedDate = (Date)attributes.get("modifiedDate");

		if (modifiedDate != null) {
			setModifiedDate(modifiedDate);
		}

		String title = (String)attributes.get("title");

		if (title != null) {
			setTitle(title);
		}

		String content = (String)attributes.get("content");

		if (content != null) {
			setContent(content);
		}

		String contentType = (String)attributes.get("contentType");

		if (contentType != null) {
			setContentType(contentType);
		}

		String comments = (String)attributes.get("comments");

		if (comments != null) {
			setComments(comments);
		}

		Integer timesUsed = (Integer)attributes.get("timesUsed");

		if (timesUsed != null) {
			setTimesUsed(timesUsed);
		}
	}

	@JSON
	@Override
	public long getTemplateId() {
		return _templateId;
	}

	@Override
	public void setTemplateId(long templateId) {
		_columnBitmask = -1L;

		_templateId = templateId;
	}

	@JSON
	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		_companyId = companyId;
	}

	@JSON
	@Override
	public long getScopeGroupId() {
		return _scopeGroupId;
	}

	@Override
	public void setScopeGroupId(long scopeGroupId) {
		_scopeGroupId = scopeGroupId;
	}

	@JSON
	@Override
	public String getCreatedBy() {
		if (_createdBy == null) {
			return StringPool.BLANK;
		}
		else {
			return _createdBy;
		}
	}

	@Override
	public void setCreatedBy(String createdBy) {
		_columnBitmask |= CREATEDBY_COLUMN_BITMASK;

		if (_originalCreatedBy == null) {
			_originalCreatedBy = _createdBy;
		}

		_createdBy = createdBy;
	}

	public String getOriginalCreatedBy() {
		return GetterUtil.getString(_originalCreatedBy);
	}

	@JSON
	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		_createDate = createDate;
	}

	@JSON
	@Override
	public String getModifiedBy() {
		if (_modifiedBy == null) {
			return StringPool.BLANK;
		}
		else {
			return _modifiedBy;
		}
	}

	@Override
	public void setModifiedBy(String modifiedBy) {
		_modifiedBy = modifiedBy;
	}

	@JSON
	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	public boolean hasSetModifiedDate() {
		return _setModifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_setModifiedDate = true;

		_modifiedDate = modifiedDate;
	}

	@JSON
	@Override
	public String getTitle() {
		if (_title == null) {
			return StringPool.BLANK;
		}
		else {
			return _title;
		}
	}

	@Override
	public void setTitle(String title) {
		_columnBitmask |= TITLE_COLUMN_BITMASK;

		if (_originalTitle == null) {
			_originalTitle = _title;
		}

		_title = title;
	}

	public String getOriginalTitle() {
		return GetterUtil.getString(_originalTitle);
	}

	@JSON
	@Override
	public String getContent() {
		if (_content == null) {
			return StringPool.BLANK;
		}
		else {
			return _content;
		}
	}

	@Override
	public void setContent(String content) {
		_columnBitmask |= CONTENT_COLUMN_BITMASK;

		if (_originalContent == null) {
			_originalContent = _content;
		}

		_content = content;
	}

	public String getOriginalContent() {
		return GetterUtil.getString(_originalContent);
	}

	@JSON
	@Override
	public String getContentType() {
		if (_contentType == null) {
			return StringPool.BLANK;
		}
		else {
			return _contentType;
		}
	}

	@Override
	public void setContentType(String contentType) {
		_columnBitmask |= CONTENTTYPE_COLUMN_BITMASK;

		if (_originalContentType == null) {
			_originalContentType = _contentType;
		}

		_contentType = contentType;
	}

	public String getOriginalContentType() {
		return GetterUtil.getString(_originalContentType);
	}

	@JSON
	@Override
	public String getComments() {
		if (_comments == null) {
			return StringPool.BLANK;
		}
		else {
			return _comments;
		}
	}

	@Override
	public void setComments(String comments) {
		_comments = comments;
	}

	@JSON
	@Override
	public int getTimesUsed() {
		return _timesUsed;
	}

	@Override
	public void setTimesUsed(int timesUsed) {
		_timesUsed = timesUsed;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(getCompanyId(),
			WFMS_NotificationEngine.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public WFMS_NotificationEngine toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (WFMS_NotificationEngine)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		WFMS_NotificationEngineImpl wfms_NotificationEngineImpl = new WFMS_NotificationEngineImpl();

		wfms_NotificationEngineImpl.setTemplateId(getTemplateId());
		wfms_NotificationEngineImpl.setCompanyId(getCompanyId());
		wfms_NotificationEngineImpl.setScopeGroupId(getScopeGroupId());
		wfms_NotificationEngineImpl.setCreatedBy(getCreatedBy());
		wfms_NotificationEngineImpl.setCreateDate(getCreateDate());
		wfms_NotificationEngineImpl.setModifiedBy(getModifiedBy());
		wfms_NotificationEngineImpl.setModifiedDate(getModifiedDate());
		wfms_NotificationEngineImpl.setTitle(getTitle());
		wfms_NotificationEngineImpl.setContent(getContent());
		wfms_NotificationEngineImpl.setContentType(getContentType());
		wfms_NotificationEngineImpl.setComments(getComments());
		wfms_NotificationEngineImpl.setTimesUsed(getTimesUsed());

		wfms_NotificationEngineImpl.resetOriginalValues();

		return wfms_NotificationEngineImpl;
	}

	@Override
	public int compareTo(WFMS_NotificationEngine wfms_NotificationEngine) {
		int value = 0;

		if (getTemplateId() < wfms_NotificationEngine.getTemplateId()) {
			value = -1;
		}
		else if (getTemplateId() > wfms_NotificationEngine.getTemplateId()) {
			value = 1;
		}
		else {
			value = 0;
		}

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof WFMS_NotificationEngine)) {
			return false;
		}

		WFMS_NotificationEngine wfms_NotificationEngine = (WFMS_NotificationEngine)obj;

		long primaryKey = wfms_NotificationEngine.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public boolean isEntityCacheEnabled() {
		return ENTITY_CACHE_ENABLED;
	}

	@Override
	public boolean isFinderCacheEnabled() {
		return FINDER_CACHE_ENABLED;
	}

	@Override
	public void resetOriginalValues() {
		WFMS_NotificationEngineModelImpl wfms_NotificationEngineModelImpl = this;

		wfms_NotificationEngineModelImpl._originalCreatedBy = wfms_NotificationEngineModelImpl._createdBy;

		wfms_NotificationEngineModelImpl._setModifiedDate = false;

		wfms_NotificationEngineModelImpl._originalTitle = wfms_NotificationEngineModelImpl._title;

		wfms_NotificationEngineModelImpl._originalContent = wfms_NotificationEngineModelImpl._content;

		wfms_NotificationEngineModelImpl._originalContentType = wfms_NotificationEngineModelImpl._contentType;

		wfms_NotificationEngineModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<WFMS_NotificationEngine> toCacheModel() {
		WFMS_NotificationEngineCacheModel wfms_NotificationEngineCacheModel = new WFMS_NotificationEngineCacheModel();

		wfms_NotificationEngineCacheModel.templateId = getTemplateId();

		wfms_NotificationEngineCacheModel.companyId = getCompanyId();

		wfms_NotificationEngineCacheModel.scopeGroupId = getScopeGroupId();

		wfms_NotificationEngineCacheModel.createdBy = getCreatedBy();

		String createdBy = wfms_NotificationEngineCacheModel.createdBy;

		if ((createdBy != null) && (createdBy.length() == 0)) {
			wfms_NotificationEngineCacheModel.createdBy = null;
		}

		Date createDate = getCreateDate();

		if (createDate != null) {
			wfms_NotificationEngineCacheModel.createDate = createDate.getTime();
		}
		else {
			wfms_NotificationEngineCacheModel.createDate = Long.MIN_VALUE;
		}

		wfms_NotificationEngineCacheModel.modifiedBy = getModifiedBy();

		String modifiedBy = wfms_NotificationEngineCacheModel.modifiedBy;

		if ((modifiedBy != null) && (modifiedBy.length() == 0)) {
			wfms_NotificationEngineCacheModel.modifiedBy = null;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			wfms_NotificationEngineCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			wfms_NotificationEngineCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		wfms_NotificationEngineCacheModel.title = getTitle();

		String title = wfms_NotificationEngineCacheModel.title;

		if ((title != null) && (title.length() == 0)) {
			wfms_NotificationEngineCacheModel.title = null;
		}

		wfms_NotificationEngineCacheModel.content = getContent();

		String content = wfms_NotificationEngineCacheModel.content;

		if ((content != null) && (content.length() == 0)) {
			wfms_NotificationEngineCacheModel.content = null;
		}

		wfms_NotificationEngineCacheModel.contentType = getContentType();

		String contentType = wfms_NotificationEngineCacheModel.contentType;

		if ((contentType != null) && (contentType.length() == 0)) {
			wfms_NotificationEngineCacheModel.contentType = null;
		}

		wfms_NotificationEngineCacheModel.comments = getComments();

		String comments = wfms_NotificationEngineCacheModel.comments;

		if ((comments != null) && (comments.length() == 0)) {
			wfms_NotificationEngineCacheModel.comments = null;
		}

		wfms_NotificationEngineCacheModel.timesUsed = getTimesUsed();

		return wfms_NotificationEngineCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(25);

		sb.append("{templateId=");
		sb.append(getTemplateId());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append(", scopeGroupId=");
		sb.append(getScopeGroupId());
		sb.append(", createdBy=");
		sb.append(getCreatedBy());
		sb.append(", createDate=");
		sb.append(getCreateDate());
		sb.append(", modifiedBy=");
		sb.append(getModifiedBy());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append(", title=");
		sb.append(getTitle());
		sb.append(", content=");
		sb.append(getContent());
		sb.append(", contentType=");
		sb.append(getContentType());
		sb.append(", comments=");
		sb.append(getComments());
		sb.append(", timesUsed=");
		sb.append(getTimesUsed());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(40);

		sb.append("<model><model-name>");
		sb.append("com.ys.hmawfm.wfms.services.model.WFMS_NotificationEngine");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>templateId</column-name><column-value><![CDATA[");
		sb.append(getTemplateId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>scopeGroupId</column-name><column-value><![CDATA[");
		sb.append(getScopeGroupId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createdBy</column-name><column-value><![CDATA[");
		sb.append(getCreatedBy());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createDate</column-name><column-value><![CDATA[");
		sb.append(getCreateDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedBy</column-name><column-value><![CDATA[");
		sb.append(getModifiedBy());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>title</column-name><column-value><![CDATA[");
		sb.append(getTitle());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>content</column-name><column-value><![CDATA[");
		sb.append(getContent());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>contentType</column-name><column-value><![CDATA[");
		sb.append(getContentType());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>comments</column-name><column-value><![CDATA[");
		sb.append(getComments());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>timesUsed</column-name><column-value><![CDATA[");
		sb.append(getTimesUsed());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static final ClassLoader _classLoader = WFMS_NotificationEngine.class.getClassLoader();
	private static final Class<?>[] _escapedModelInterfaces = new Class[] {
			WFMS_NotificationEngine.class
		};
	private long _templateId;
	private long _companyId;
	private long _scopeGroupId;
	private String _createdBy;
	private String _originalCreatedBy;
	private Date _createDate;
	private String _modifiedBy;
	private Date _modifiedDate;
	private boolean _setModifiedDate;
	private String _title;
	private String _originalTitle;
	private String _content;
	private String _originalContent;
	private String _contentType;
	private String _originalContentType;
	private String _comments;
	private int _timesUsed;
	private long _columnBitmask;
	private WFMS_NotificationEngine _escapedModel;
}