/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.ys.hmawfm.wfms.services.model.impl;

import aQute.bnd.annotation.ProviderType;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;

import com.ys.hmawfm.wfms.services.model.WFMS_routing_and_approvers;
import com.ys.hmawfm.wfms.services.model.WFMS_routing_and_approversModel;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the WFMS_routing_and_approvers service. Represents a row in the &quot;WFMS_routing_and_approvers&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link WFMS_routing_and_approversModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link WFMS_routing_and_approversImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see WFMS_routing_and_approversImpl
 * @see WFMS_routing_and_approvers
 * @see WFMS_routing_and_approversModel
 * @generated
 */
@ProviderType
public class WFMS_routing_and_approversModelImpl extends BaseModelImpl<WFMS_routing_and_approvers>
	implements WFMS_routing_and_approversModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a WFMS_routing_and_approvers model instance should use the {@link WFMS_routing_and_approvers} interface instead.
	 */
	public static final String TABLE_NAME = "WFMS_routing_and_approvers";
	public static final Object[][] TABLE_COLUMNS = {
			{ "rapId", Types.VARCHAR },
			{ "action", Types.VARCHAR },
			{ "changeDescription", Types.VARCHAR },
			{ "currentJobCodeORLeadership", Types.VARCHAR },
			{ "newJobCodeORLeadership", Types.VARCHAR },
			{ "SameJobCode", Types.VARCHAR },
			{ "SameLeadership", Types.VARCHAR },
			{ "isSameDept", Types.VARCHAR },
			{ "isSameMgr", Types.VARCHAR },
			{ "routingProcess", Types.VARCHAR },
			{ "notificationTo", Types.VARCHAR },
			{ "deleteflag", Types.INTEGER },
			{ "createdBy", Types.VARCHAR },
			{ "createDate", Types.TIMESTAMP },
			{ "modifiedBy", Types.VARCHAR },
			{ "modifiedDate", Types.TIMESTAMP }
		};
	public static final Map<String, Integer> TABLE_COLUMNS_MAP = new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("rapId", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("action", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("changeDescription", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("currentJobCodeORLeadership", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("newJobCodeORLeadership", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("SameJobCode", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("SameLeadership", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("isSameDept", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("isSameMgr", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("routingProcess", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("notificationTo", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("deleteflag", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("createdBy", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("createDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("modifiedBy", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("modifiedDate", Types.TIMESTAMP);
	}

	public static final String TABLE_SQL_CREATE = "create table WFMS_routing_and_approvers (rapId VARCHAR(75) not null primary key,action VARCHAR(75) null,changeDescription VARCHAR(255) null,currentJobCodeORLeadership VARCHAR(255) null,newJobCodeORLeadership VARCHAR(255) null,SameJobCode VARCHAR(75) null,SameLeadership VARCHAR(75) null,isSameDept VARCHAR(75) null,isSameMgr VARCHAR(75) null,routingProcess VARCHAR(255) null,notificationTo VARCHAR(255) null,deleteflag INTEGER,createdBy VARCHAR(75) null,createDate DATE null,modifiedBy VARCHAR(75) null,modifiedDate DATE null)";
	public static final String TABLE_SQL_DROP = "drop table WFMS_routing_and_approvers";
	public static final String ORDER_BY_JPQL = " ORDER BY wfms_routing_and_approvers.changeDescription ASC";
	public static final String ORDER_BY_SQL = " ORDER BY WFMS_routing_and_approvers.changeDescription ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.ys.hmawfm.wfms.services.service.util.ServiceProps.get(
				"value.object.entity.cache.enabled.com.ys.hmawfm.wfms.services.model.WFMS_routing_and_approvers"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.ys.hmawfm.wfms.services.service.util.ServiceProps.get(
				"value.object.finder.cache.enabled.com.ys.hmawfm.wfms.services.model.WFMS_routing_and_approvers"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.ys.hmawfm.wfms.services.service.util.ServiceProps.get(
				"value.object.column.bitmask.enabled.com.ys.hmawfm.wfms.services.model.WFMS_routing_and_approvers"),
			true);
	public static final long RAPID_COLUMN_BITMASK = 1L;
	public static final long CHANGEDESCRIPTION_COLUMN_BITMASK = 2L;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.ys.hmawfm.wfms.services.service.util.ServiceProps.get(
				"lock.expiration.time.com.ys.hmawfm.wfms.services.model.WFMS_routing_and_approvers"));

	public WFMS_routing_and_approversModelImpl() {
	}

	@Override
	public String getPrimaryKey() {
		return _rapId;
	}

	@Override
	public void setPrimaryKey(String primaryKey) {
		setRapId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _rapId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey((String)primaryKeyObj);
	}

	@Override
	public Class<?> getModelClass() {
		return WFMS_routing_and_approvers.class;
	}

	@Override
	public String getModelClassName() {
		return WFMS_routing_and_approvers.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("rapId", getRapId());
		attributes.put("action", getAction());
		attributes.put("changeDescription", getChangeDescription());
		attributes.put("currentJobCodeORLeadership",
			getCurrentJobCodeORLeadership());
		attributes.put("newJobCodeORLeadership", getNewJobCodeORLeadership());
		attributes.put("SameJobCode", getSameJobCode());
		attributes.put("SameLeadership", getSameLeadership());
		attributes.put("isSameDept", getIsSameDept());
		attributes.put("isSameMgr", getIsSameMgr());
		attributes.put("routingProcess", getRoutingProcess());
		attributes.put("notificationTo", getNotificationTo());
		attributes.put("deleteflag", getDeleteflag());
		attributes.put("createdBy", getCreatedBy());
		attributes.put("createDate", getCreateDate());
		attributes.put("modifiedBy", getModifiedBy());
		attributes.put("modifiedDate", getModifiedDate());

		attributes.put("entityCacheEnabled", isEntityCacheEnabled());
		attributes.put("finderCacheEnabled", isFinderCacheEnabled());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		String rapId = (String)attributes.get("rapId");

		if (rapId != null) {
			setRapId(rapId);
		}

		String action = (String)attributes.get("action");

		if (action != null) {
			setAction(action);
		}

		String changeDescription = (String)attributes.get("changeDescription");

		if (changeDescription != null) {
			setChangeDescription(changeDescription);
		}

		String currentJobCodeORLeadership = (String)attributes.get(
				"currentJobCodeORLeadership");

		if (currentJobCodeORLeadership != null) {
			setCurrentJobCodeORLeadership(currentJobCodeORLeadership);
		}

		String newJobCodeORLeadership = (String)attributes.get(
				"newJobCodeORLeadership");

		if (newJobCodeORLeadership != null) {
			setNewJobCodeORLeadership(newJobCodeORLeadership);
		}

		String SameJobCode = (String)attributes.get("SameJobCode");

		if (SameJobCode != null) {
			setSameJobCode(SameJobCode);
		}

		String SameLeadership = (String)attributes.get("SameLeadership");

		if (SameLeadership != null) {
			setSameLeadership(SameLeadership);
		}

		String isSameDept = (String)attributes.get("isSameDept");

		if (isSameDept != null) {
			setIsSameDept(isSameDept);
		}

		String isSameMgr = (String)attributes.get("isSameMgr");

		if (isSameMgr != null) {
			setIsSameMgr(isSameMgr);
		}

		String routingProcess = (String)attributes.get("routingProcess");

		if (routingProcess != null) {
			setRoutingProcess(routingProcess);
		}

		String notificationTo = (String)attributes.get("notificationTo");

		if (notificationTo != null) {
			setNotificationTo(notificationTo);
		}

		Integer deleteflag = (Integer)attributes.get("deleteflag");

		if (deleteflag != null) {
			setDeleteflag(deleteflag);
		}

		String createdBy = (String)attributes.get("createdBy");

		if (createdBy != null) {
			setCreatedBy(createdBy);
		}

		Date createDate = (Date)attributes.get("createDate");

		if (createDate != null) {
			setCreateDate(createDate);
		}

		String modifiedBy = (String)attributes.get("modifiedBy");

		if (modifiedBy != null) {
			setModifiedBy(modifiedBy);
		}

		Date modifiedDate = (Date)attributes.get("modifiedDate");

		if (modifiedDate != null) {
			setModifiedDate(modifiedDate);
		}
	}

	@Override
	public String getRapId() {
		if (_rapId == null) {
			return StringPool.BLANK;
		}
		else {
			return _rapId;
		}
	}

	@Override
	public void setRapId(String rapId) {
		_columnBitmask |= RAPID_COLUMN_BITMASK;

		if (_originalRapId == null) {
			_originalRapId = _rapId;
		}

		_rapId = rapId;
	}

	public String getOriginalRapId() {
		return GetterUtil.getString(_originalRapId);
	}

	@Override
	public String getAction() {
		if (_action == null) {
			return StringPool.BLANK;
		}
		else {
			return _action;
		}
	}

	@Override
	public void setAction(String action) {
		_action = action;
	}

	@Override
	public String getChangeDescription() {
		if (_changeDescription == null) {
			return StringPool.BLANK;
		}
		else {
			return _changeDescription;
		}
	}

	@Override
	public void setChangeDescription(String changeDescription) {
		_columnBitmask = -1L;

		_changeDescription = changeDescription;
	}

	@Override
	public String getCurrentJobCodeORLeadership() {
		if (_currentJobCodeORLeadership == null) {
			return StringPool.BLANK;
		}
		else {
			return _currentJobCodeORLeadership;
		}
	}

	@Override
	public void setCurrentJobCodeORLeadership(String currentJobCodeORLeadership) {
		_currentJobCodeORLeadership = currentJobCodeORLeadership;
	}

	@Override
	public String getNewJobCodeORLeadership() {
		if (_newJobCodeORLeadership == null) {
			return StringPool.BLANK;
		}
		else {
			return _newJobCodeORLeadership;
		}
	}

	@Override
	public void setNewJobCodeORLeadership(String newJobCodeORLeadership) {
		_newJobCodeORLeadership = newJobCodeORLeadership;
	}

	@Override
	public String getSameJobCode() {
		if (_SameJobCode == null) {
			return StringPool.BLANK;
		}
		else {
			return _SameJobCode;
		}
	}

	@Override
	public void setSameJobCode(String SameJobCode) {
		_SameJobCode = SameJobCode;
	}

	@Override
	public String getSameLeadership() {
		if (_SameLeadership == null) {
			return StringPool.BLANK;
		}
		else {
			return _SameLeadership;
		}
	}

	@Override
	public void setSameLeadership(String SameLeadership) {
		_SameLeadership = SameLeadership;
	}

	@Override
	public String getIsSameDept() {
		if (_isSameDept == null) {
			return StringPool.BLANK;
		}
		else {
			return _isSameDept;
		}
	}

	@Override
	public void setIsSameDept(String isSameDept) {
		_isSameDept = isSameDept;
	}

	@Override
	public String getIsSameMgr() {
		if (_isSameMgr == null) {
			return StringPool.BLANK;
		}
		else {
			return _isSameMgr;
		}
	}

	@Override
	public void setIsSameMgr(String isSameMgr) {
		_isSameMgr = isSameMgr;
	}

	@Override
	public String getRoutingProcess() {
		if (_routingProcess == null) {
			return StringPool.BLANK;
		}
		else {
			return _routingProcess;
		}
	}

	@Override
	public void setRoutingProcess(String routingProcess) {
		_routingProcess = routingProcess;
	}

	@Override
	public String getNotificationTo() {
		if (_notificationTo == null) {
			return StringPool.BLANK;
		}
		else {
			return _notificationTo;
		}
	}

	@Override
	public void setNotificationTo(String notificationTo) {
		_notificationTo = notificationTo;
	}

	@Override
	public int getDeleteflag() {
		return _deleteflag;
	}

	@Override
	public void setDeleteflag(int deleteflag) {
		_deleteflag = deleteflag;
	}

	@Override
	public String getCreatedBy() {
		if (_createdBy == null) {
			return StringPool.BLANK;
		}
		else {
			return _createdBy;
		}
	}

	@Override
	public void setCreatedBy(String createdBy) {
		_createdBy = createdBy;
	}

	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		_createDate = createDate;
	}

	@Override
	public String getModifiedBy() {
		if (_modifiedBy == null) {
			return StringPool.BLANK;
		}
		else {
			return _modifiedBy;
		}
	}

	@Override
	public void setModifiedBy(String modifiedBy) {
		_modifiedBy = modifiedBy;
	}

	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	public boolean hasSetModifiedDate() {
		return _setModifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_setModifiedDate = true;

		_modifiedDate = modifiedDate;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public WFMS_routing_and_approvers toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (WFMS_routing_and_approvers)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		WFMS_routing_and_approversImpl wfms_routing_and_approversImpl = new WFMS_routing_and_approversImpl();

		wfms_routing_and_approversImpl.setRapId(getRapId());
		wfms_routing_and_approversImpl.setAction(getAction());
		wfms_routing_and_approversImpl.setChangeDescription(getChangeDescription());
		wfms_routing_and_approversImpl.setCurrentJobCodeORLeadership(getCurrentJobCodeORLeadership());
		wfms_routing_and_approversImpl.setNewJobCodeORLeadership(getNewJobCodeORLeadership());
		wfms_routing_and_approversImpl.setSameJobCode(getSameJobCode());
		wfms_routing_and_approversImpl.setSameLeadership(getSameLeadership());
		wfms_routing_and_approversImpl.setIsSameDept(getIsSameDept());
		wfms_routing_and_approversImpl.setIsSameMgr(getIsSameMgr());
		wfms_routing_and_approversImpl.setRoutingProcess(getRoutingProcess());
		wfms_routing_and_approversImpl.setNotificationTo(getNotificationTo());
		wfms_routing_and_approversImpl.setDeleteflag(getDeleteflag());
		wfms_routing_and_approversImpl.setCreatedBy(getCreatedBy());
		wfms_routing_and_approversImpl.setCreateDate(getCreateDate());
		wfms_routing_and_approversImpl.setModifiedBy(getModifiedBy());
		wfms_routing_and_approversImpl.setModifiedDate(getModifiedDate());

		wfms_routing_and_approversImpl.resetOriginalValues();

		return wfms_routing_and_approversImpl;
	}

	@Override
	public int compareTo(WFMS_routing_and_approvers wfms_routing_and_approvers) {
		int value = 0;

		value = getChangeDescription()
					.compareTo(wfms_routing_and_approvers.getChangeDescription());

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof WFMS_routing_and_approvers)) {
			return false;
		}

		WFMS_routing_and_approvers wfms_routing_and_approvers = (WFMS_routing_and_approvers)obj;

		String primaryKey = wfms_routing_and_approvers.getPrimaryKey();

		if (getPrimaryKey().equals(primaryKey)) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return getPrimaryKey().hashCode();
	}

	@Override
	public boolean isEntityCacheEnabled() {
		return ENTITY_CACHE_ENABLED;
	}

	@Override
	public boolean isFinderCacheEnabled() {
		return FINDER_CACHE_ENABLED;
	}

	@Override
	public void resetOriginalValues() {
		WFMS_routing_and_approversModelImpl wfms_routing_and_approversModelImpl = this;

		wfms_routing_and_approversModelImpl._originalRapId = wfms_routing_and_approversModelImpl._rapId;

		wfms_routing_and_approversModelImpl._setModifiedDate = false;

		wfms_routing_and_approversModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<WFMS_routing_and_approvers> toCacheModel() {
		WFMS_routing_and_approversCacheModel wfms_routing_and_approversCacheModel =
			new WFMS_routing_and_approversCacheModel();

		wfms_routing_and_approversCacheModel.rapId = getRapId();

		String rapId = wfms_routing_and_approversCacheModel.rapId;

		if ((rapId != null) && (rapId.length() == 0)) {
			wfms_routing_and_approversCacheModel.rapId = null;
		}

		wfms_routing_and_approversCacheModel.action = getAction();

		String action = wfms_routing_and_approversCacheModel.action;

		if ((action != null) && (action.length() == 0)) {
			wfms_routing_and_approversCacheModel.action = null;
		}

		wfms_routing_and_approversCacheModel.changeDescription = getChangeDescription();

		String changeDescription = wfms_routing_and_approversCacheModel.changeDescription;

		if ((changeDescription != null) && (changeDescription.length() == 0)) {
			wfms_routing_and_approversCacheModel.changeDescription = null;
		}

		wfms_routing_and_approversCacheModel.currentJobCodeORLeadership = getCurrentJobCodeORLeadership();

		String currentJobCodeORLeadership = wfms_routing_and_approversCacheModel.currentJobCodeORLeadership;

		if ((currentJobCodeORLeadership != null) &&
				(currentJobCodeORLeadership.length() == 0)) {
			wfms_routing_and_approversCacheModel.currentJobCodeORLeadership = null;
		}

		wfms_routing_and_approversCacheModel.newJobCodeORLeadership = getNewJobCodeORLeadership();

		String newJobCodeORLeadership = wfms_routing_and_approversCacheModel.newJobCodeORLeadership;

		if ((newJobCodeORLeadership != null) &&
				(newJobCodeORLeadership.length() == 0)) {
			wfms_routing_and_approversCacheModel.newJobCodeORLeadership = null;
		}

		wfms_routing_and_approversCacheModel.SameJobCode = getSameJobCode();

		String SameJobCode = wfms_routing_and_approversCacheModel.SameJobCode;

		if ((SameJobCode != null) && (SameJobCode.length() == 0)) {
			wfms_routing_and_approversCacheModel.SameJobCode = null;
		}

		wfms_routing_and_approversCacheModel.SameLeadership = getSameLeadership();

		String SameLeadership = wfms_routing_and_approversCacheModel.SameLeadership;

		if ((SameLeadership != null) && (SameLeadership.length() == 0)) {
			wfms_routing_and_approversCacheModel.SameLeadership = null;
		}

		wfms_routing_and_approversCacheModel.isSameDept = getIsSameDept();

		String isSameDept = wfms_routing_and_approversCacheModel.isSameDept;

		if ((isSameDept != null) && (isSameDept.length() == 0)) {
			wfms_routing_and_approversCacheModel.isSameDept = null;
		}

		wfms_routing_and_approversCacheModel.isSameMgr = getIsSameMgr();

		String isSameMgr = wfms_routing_and_approversCacheModel.isSameMgr;

		if ((isSameMgr != null) && (isSameMgr.length() == 0)) {
			wfms_routing_and_approversCacheModel.isSameMgr = null;
		}

		wfms_routing_and_approversCacheModel.routingProcess = getRoutingProcess();

		String routingProcess = wfms_routing_and_approversCacheModel.routingProcess;

		if ((routingProcess != null) && (routingProcess.length() == 0)) {
			wfms_routing_and_approversCacheModel.routingProcess = null;
		}

		wfms_routing_and_approversCacheModel.notificationTo = getNotificationTo();

		String notificationTo = wfms_routing_and_approversCacheModel.notificationTo;

		if ((notificationTo != null) && (notificationTo.length() == 0)) {
			wfms_routing_and_approversCacheModel.notificationTo = null;
		}

		wfms_routing_and_approversCacheModel.deleteflag = getDeleteflag();

		wfms_routing_and_approversCacheModel.createdBy = getCreatedBy();

		String createdBy = wfms_routing_and_approversCacheModel.createdBy;

		if ((createdBy != null) && (createdBy.length() == 0)) {
			wfms_routing_and_approversCacheModel.createdBy = null;
		}

		Date createDate = getCreateDate();

		if (createDate != null) {
			wfms_routing_and_approversCacheModel.createDate = createDate.getTime();
		}
		else {
			wfms_routing_and_approversCacheModel.createDate = Long.MIN_VALUE;
		}

		wfms_routing_and_approversCacheModel.modifiedBy = getModifiedBy();

		String modifiedBy = wfms_routing_and_approversCacheModel.modifiedBy;

		if ((modifiedBy != null) && (modifiedBy.length() == 0)) {
			wfms_routing_and_approversCacheModel.modifiedBy = null;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			wfms_routing_and_approversCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			wfms_routing_and_approversCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		return wfms_routing_and_approversCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(33);

		sb.append("{rapId=");
		sb.append(getRapId());
		sb.append(", action=");
		sb.append(getAction());
		sb.append(", changeDescription=");
		sb.append(getChangeDescription());
		sb.append(", currentJobCodeORLeadership=");
		sb.append(getCurrentJobCodeORLeadership());
		sb.append(", newJobCodeORLeadership=");
		sb.append(getNewJobCodeORLeadership());
		sb.append(", SameJobCode=");
		sb.append(getSameJobCode());
		sb.append(", SameLeadership=");
		sb.append(getSameLeadership());
		sb.append(", isSameDept=");
		sb.append(getIsSameDept());
		sb.append(", isSameMgr=");
		sb.append(getIsSameMgr());
		sb.append(", routingProcess=");
		sb.append(getRoutingProcess());
		sb.append(", notificationTo=");
		sb.append(getNotificationTo());
		sb.append(", deleteflag=");
		sb.append(getDeleteflag());
		sb.append(", createdBy=");
		sb.append(getCreatedBy());
		sb.append(", createDate=");
		sb.append(getCreateDate());
		sb.append(", modifiedBy=");
		sb.append(getModifiedBy());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(52);

		sb.append("<model><model-name>");
		sb.append(
			"com.ys.hmawfm.wfms.services.model.WFMS_routing_and_approvers");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>rapId</column-name><column-value><![CDATA[");
		sb.append(getRapId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>action</column-name><column-value><![CDATA[");
		sb.append(getAction());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>changeDescription</column-name><column-value><![CDATA[");
		sb.append(getChangeDescription());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>currentJobCodeORLeadership</column-name><column-value><![CDATA[");
		sb.append(getCurrentJobCodeORLeadership());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>newJobCodeORLeadership</column-name><column-value><![CDATA[");
		sb.append(getNewJobCodeORLeadership());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>SameJobCode</column-name><column-value><![CDATA[");
		sb.append(getSameJobCode());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>SameLeadership</column-name><column-value><![CDATA[");
		sb.append(getSameLeadership());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>isSameDept</column-name><column-value><![CDATA[");
		sb.append(getIsSameDept());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>isSameMgr</column-name><column-value><![CDATA[");
		sb.append(getIsSameMgr());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>routingProcess</column-name><column-value><![CDATA[");
		sb.append(getRoutingProcess());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>notificationTo</column-name><column-value><![CDATA[");
		sb.append(getNotificationTo());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>deleteflag</column-name><column-value><![CDATA[");
		sb.append(getDeleteflag());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createdBy</column-name><column-value><![CDATA[");
		sb.append(getCreatedBy());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createDate</column-name><column-value><![CDATA[");
		sb.append(getCreateDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedBy</column-name><column-value><![CDATA[");
		sb.append(getModifiedBy());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static final ClassLoader _classLoader = WFMS_routing_and_approvers.class.getClassLoader();
	private static final Class<?>[] _escapedModelInterfaces = new Class[] {
			WFMS_routing_and_approvers.class
		};
	private String _rapId;
	private String _originalRapId;
	private String _action;
	private String _changeDescription;
	private String _currentJobCodeORLeadership;
	private String _newJobCodeORLeadership;
	private String _SameJobCode;
	private String _SameLeadership;
	private String _isSameDept;
	private String _isSameMgr;
	private String _routingProcess;
	private String _notificationTo;
	private int _deleteflag;
	private String _createdBy;
	private Date _createDate;
	private String _modifiedBy;
	private Date _modifiedDate;
	private boolean _setModifiedDate;
	private long _columnBitmask;
	private WFMS_routing_and_approvers _escapedModel;
}