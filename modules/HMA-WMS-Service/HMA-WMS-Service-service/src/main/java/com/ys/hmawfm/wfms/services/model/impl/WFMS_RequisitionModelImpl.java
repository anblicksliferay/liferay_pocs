/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.ys.hmawfm.wfms.services.model.impl;

import aQute.bnd.annotation.ProviderType;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;

import com.ys.hmawfm.wfms.services.model.WFMS_Requisition;
import com.ys.hmawfm.wfms.services.model.WFMS_RequisitionModel;
import com.ys.hmawfm.wfms.services.model.WFMS_RequisitionSoap;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the WFMS_Requisition service. Represents a row in the &quot;WFMS_Requisition&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link WFMS_RequisitionModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link WFMS_RequisitionImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see WFMS_RequisitionImpl
 * @see WFMS_Requisition
 * @see WFMS_RequisitionModel
 * @generated
 */
@JSON(strict = true)
@ProviderType
public class WFMS_RequisitionModelImpl extends BaseModelImpl<WFMS_Requisition>
	implements WFMS_RequisitionModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a WFMS_Requisition model instance should use the {@link WFMS_Requisition} interface instead.
	 */
	public static final String TABLE_NAME = "WFMS_Requisition";
	public static final Object[][] TABLE_COLUMNS = {
			{ "rwfId", Types.VARCHAR },
			{ "rId", Types.VARCHAR },
			{ "companyId", Types.BIGINT },
			{ "scopeGroupId", Types.BIGINT },
			{ "createDate", Types.TIMESTAMP },
			{ "modifiedDate", Types.TIMESTAMP },
			{ "ApprovedDate", Types.TIMESTAMP },
			{ "createdBy", Types.VARCHAR },
			{ "Number", Types.VARCHAR },
			{ "associatenumber", Types.VARCHAR },
			{ "associatename", Types.VARCHAR },
			{ "status", Types.VARCHAR },
			{ "postingType", Types.VARCHAR },
			{ "teamNumber", Types.VARCHAR },
			{ "associatetype", Types.VARCHAR },
			{ "shiftAssign", Types.VARCHAR },
			{ "howAvailable", Types.VARCHAR },
			{ "whoReplaced", Types.VARCHAR },
			{ "dateneeded", Types.VARCHAR },
			{ "contactperson", Types.VARCHAR },
			{ "contactphonenumber", Types.VARCHAR },
			{ "taleonumber", Types.VARCHAR },
			{ "other", Types.VARCHAR },
			{ "comments", Types.VARCHAR },
			{ "deleteflagStatus", Types.INTEGER },
			{ "dummy", Types.VARCHAR },
			{ "workflowId", Types.VARCHAR },
			{ "nextapprove", Types.VARCHAR },
			{ "roleOfApprover", Types.VARCHAR },
			{ "relatesTo", Types.VARCHAR },
			{ "workflow", Types.VARCHAR },
			{ "workflowStep", Types.INTEGER },
			{ "approverStep", Types.INTEGER },
			{ "refReqId", Types.VARCHAR },
			{ "disapproveComments", Types.VARCHAR }
		};
	public static final Map<String, Integer> TABLE_COLUMNS_MAP = new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("rwfId", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("rId", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("companyId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("scopeGroupId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("createDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("modifiedDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("ApprovedDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("createdBy", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("Number", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("associatenumber", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("associatename", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("status", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("postingType", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("teamNumber", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("associatetype", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("shiftAssign", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("howAvailable", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("whoReplaced", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("dateneeded", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("contactperson", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("contactphonenumber", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("taleonumber", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("other", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("comments", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("deleteflagStatus", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("dummy", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("workflowId", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("nextapprove", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("roleOfApprover", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("relatesTo", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("workflow", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("workflowStep", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("approverStep", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("refReqId", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("disapproveComments", Types.VARCHAR);
	}

	public static final String TABLE_SQL_CREATE = "create table WFMS_Requisition (rwfId VARCHAR(75) not null primary key,rId VARCHAR(75) null,companyId LONG,scopeGroupId LONG,createDate DATE null,modifiedDate DATE null,ApprovedDate DATE null,createdBy VARCHAR(75) null,Number VARCHAR(75) null,associatenumber VARCHAR(75) null,associatename VARCHAR(75) null,status VARCHAR(75) null,postingType VARCHAR(75) null,teamNumber VARCHAR(75) null,associatetype VARCHAR(75) null,shiftAssign VARCHAR(75) null,howAvailable VARCHAR(75) null,whoReplaced VARCHAR(75) null,dateneeded VARCHAR(75) null,contactperson VARCHAR(75) null,contactphonenumber VARCHAR(75) null,taleonumber VARCHAR(75) null,other TEXT null,comments TEXT null,deleteflagStatus INTEGER,dummy VARCHAR(75) null,workflowId VARCHAR(75) null,nextapprove TEXT null,roleOfApprover VARCHAR(75) null,relatesTo VARCHAR(75) null,workflow VARCHAR(75) null,workflowStep INTEGER,approverStep INTEGER,refReqId VARCHAR(75) null,disapproveComments TEXT null)";
	public static final String TABLE_SQL_DROP = "drop table WFMS_Requisition";
	public static final String ORDER_BY_JPQL = " ORDER BY wfms_Requisition.rId ASC";
	public static final String ORDER_BY_SQL = " ORDER BY WFMS_Requisition.rId ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.ys.hmawfm.wfms.services.service.util.ServiceProps.get(
				"value.object.entity.cache.enabled.com.ys.hmawfm.wfms.services.model.WFMS_Requisition"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.ys.hmawfm.wfms.services.service.util.ServiceProps.get(
				"value.object.finder.cache.enabled.com.ys.hmawfm.wfms.services.model.WFMS_Requisition"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.ys.hmawfm.wfms.services.service.util.ServiceProps.get(
				"value.object.column.bitmask.enabled.com.ys.hmawfm.wfms.services.model.WFMS_Requisition"),
			true);
	public static final long NUMBER_COLUMN_BITMASK = 1L;
	public static final long ASSOCIATENUMBER_COLUMN_BITMASK = 2L;
	public static final long DUMMY_COLUMN_BITMASK = 4L;
	public static final long NEXTAPPROVE_COLUMN_BITMASK = 8L;
	public static final long RID_COLUMN_BITMASK = 16L;
	public static final long ROLEOFAPPROVER_COLUMN_BITMASK = 32L;
	public static final long RWFID_COLUMN_BITMASK = 64L;
	public static final long STATUS_COLUMN_BITMASK = 128L;
	public static final long WORKFLOWID_COLUMN_BITMASK = 256L;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static WFMS_Requisition toModel(WFMS_RequisitionSoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		WFMS_Requisition model = new WFMS_RequisitionImpl();

		model.setRwfId(soapModel.getRwfId());
		model.setRId(soapModel.getRId());
		model.setCompanyId(soapModel.getCompanyId());
		model.setScopeGroupId(soapModel.getScopeGroupId());
		model.setCreateDate(soapModel.getCreateDate());
		model.setModifiedDate(soapModel.getModifiedDate());
		model.setApprovedDate(soapModel.getApprovedDate());
		model.setCreatedBy(soapModel.getCreatedBy());
		model.setNumber(soapModel.getNumber());
		model.setAssociatenumber(soapModel.getAssociatenumber());
		model.setAssociatename(soapModel.getAssociatename());
		model.setStatus(soapModel.getStatus());
		model.setPostingType(soapModel.getPostingType());
		model.setTeamNumber(soapModel.getTeamNumber());
		model.setAssociatetype(soapModel.getAssociatetype());
		model.setShiftAssign(soapModel.getShiftAssign());
		model.setHowAvailable(soapModel.getHowAvailable());
		model.setWhoReplaced(soapModel.getWhoReplaced());
		model.setDateneeded(soapModel.getDateneeded());
		model.setContactperson(soapModel.getContactperson());
		model.setContactphonenumber(soapModel.getContactphonenumber());
		model.setTaleonumber(soapModel.getTaleonumber());
		model.setOther(soapModel.getOther());
		model.setComments(soapModel.getComments());
		model.setDeleteflagStatus(soapModel.getDeleteflagStatus());
		model.setDummy(soapModel.getDummy());
		model.setWorkflowId(soapModel.getWorkflowId());
		model.setNextapprove(soapModel.getNextapprove());
		model.setRoleOfApprover(soapModel.getRoleOfApprover());
		model.setRelatesTo(soapModel.getRelatesTo());
		model.setWorkflow(soapModel.getWorkflow());
		model.setWorkflowStep(soapModel.getWorkflowStep());
		model.setApproverStep(soapModel.getApproverStep());
		model.setRefReqId(soapModel.getRefReqId());
		model.setDisapproveComments(soapModel.getDisapproveComments());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<WFMS_Requisition> toModels(
		WFMS_RequisitionSoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<WFMS_Requisition> models = new ArrayList<WFMS_Requisition>(soapModels.length);

		for (WFMS_RequisitionSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.ys.hmawfm.wfms.services.service.util.ServiceProps.get(
				"lock.expiration.time.com.ys.hmawfm.wfms.services.model.WFMS_Requisition"));

	public WFMS_RequisitionModelImpl() {
	}

	@Override
	public String getPrimaryKey() {
		return _rwfId;
	}

	@Override
	public void setPrimaryKey(String primaryKey) {
		setRwfId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _rwfId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey((String)primaryKeyObj);
	}

	@Override
	public Class<?> getModelClass() {
		return WFMS_Requisition.class;
	}

	@Override
	public String getModelClassName() {
		return WFMS_Requisition.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("rwfId", getRwfId());
		attributes.put("rId", getRId());
		attributes.put("companyId", getCompanyId());
		attributes.put("scopeGroupId", getScopeGroupId());
		attributes.put("createDate", getCreateDate());
		attributes.put("modifiedDate", getModifiedDate());
		attributes.put("ApprovedDate", getApprovedDate());
		attributes.put("createdBy", getCreatedBy());
		attributes.put("Number", getNumber());
		attributes.put("associatenumber", getAssociatenumber());
		attributes.put("associatename", getAssociatename());
		attributes.put("status", getStatus());
		attributes.put("postingType", getPostingType());
		attributes.put("teamNumber", getTeamNumber());
		attributes.put("associatetype", getAssociatetype());
		attributes.put("shiftAssign", getShiftAssign());
		attributes.put("howAvailable", getHowAvailable());
		attributes.put("whoReplaced", getWhoReplaced());
		attributes.put("dateneeded", getDateneeded());
		attributes.put("contactperson", getContactperson());
		attributes.put("contactphonenumber", getContactphonenumber());
		attributes.put("taleonumber", getTaleonumber());
		attributes.put("other", getOther());
		attributes.put("comments", getComments());
		attributes.put("deleteflagStatus", getDeleteflagStatus());
		attributes.put("dummy", getDummy());
		attributes.put("workflowId", getWorkflowId());
		attributes.put("nextapprove", getNextapprove());
		attributes.put("roleOfApprover", getRoleOfApprover());
		attributes.put("relatesTo", getRelatesTo());
		attributes.put("workflow", getWorkflow());
		attributes.put("workflowStep", getWorkflowStep());
		attributes.put("approverStep", getApproverStep());
		attributes.put("refReqId", getRefReqId());
		attributes.put("disapproveComments", getDisapproveComments());

		attributes.put("entityCacheEnabled", isEntityCacheEnabled());
		attributes.put("finderCacheEnabled", isFinderCacheEnabled());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		String rwfId = (String)attributes.get("rwfId");

		if (rwfId != null) {
			setRwfId(rwfId);
		}

		String rId = (String)attributes.get("rId");

		if (rId != null) {
			setRId(rId);
		}

		Long companyId = (Long)attributes.get("companyId");

		if (companyId != null) {
			setCompanyId(companyId);
		}

		Long scopeGroupId = (Long)attributes.get("scopeGroupId");

		if (scopeGroupId != null) {
			setScopeGroupId(scopeGroupId);
		}

		Date createDate = (Date)attributes.get("createDate");

		if (createDate != null) {
			setCreateDate(createDate);
		}

		Date modifiedDate = (Date)attributes.get("modifiedDate");

		if (modifiedDate != null) {
			setModifiedDate(modifiedDate);
		}

		Date ApprovedDate = (Date)attributes.get("ApprovedDate");

		if (ApprovedDate != null) {
			setApprovedDate(ApprovedDate);
		}

		String createdBy = (String)attributes.get("createdBy");

		if (createdBy != null) {
			setCreatedBy(createdBy);
		}

		String Number = (String)attributes.get("Number");

		if (Number != null) {
			setNumber(Number);
		}

		String associatenumber = (String)attributes.get("associatenumber");

		if (associatenumber != null) {
			setAssociatenumber(associatenumber);
		}

		String associatename = (String)attributes.get("associatename");

		if (associatename != null) {
			setAssociatename(associatename);
		}

		String status = (String)attributes.get("status");

		if (status != null) {
			setStatus(status);
		}

		String postingType = (String)attributes.get("postingType");

		if (postingType != null) {
			setPostingType(postingType);
		}

		String teamNumber = (String)attributes.get("teamNumber");

		if (teamNumber != null) {
			setTeamNumber(teamNumber);
		}

		String associatetype = (String)attributes.get("associatetype");

		if (associatetype != null) {
			setAssociatetype(associatetype);
		}

		String shiftAssign = (String)attributes.get("shiftAssign");

		if (shiftAssign != null) {
			setShiftAssign(shiftAssign);
		}

		String howAvailable = (String)attributes.get("howAvailable");

		if (howAvailable != null) {
			setHowAvailable(howAvailable);
		}

		String whoReplaced = (String)attributes.get("whoReplaced");

		if (whoReplaced != null) {
			setWhoReplaced(whoReplaced);
		}

		String dateneeded = (String)attributes.get("dateneeded");

		if (dateneeded != null) {
			setDateneeded(dateneeded);
		}

		String contactperson = (String)attributes.get("contactperson");

		if (contactperson != null) {
			setContactperson(contactperson);
		}

		String contactphonenumber = (String)attributes.get("contactphonenumber");

		if (contactphonenumber != null) {
			setContactphonenumber(contactphonenumber);
		}

		String taleonumber = (String)attributes.get("taleonumber");

		if (taleonumber != null) {
			setTaleonumber(taleonumber);
		}

		String other = (String)attributes.get("other");

		if (other != null) {
			setOther(other);
		}

		String comments = (String)attributes.get("comments");

		if (comments != null) {
			setComments(comments);
		}

		Integer deleteflagStatus = (Integer)attributes.get("deleteflagStatus");

		if (deleteflagStatus != null) {
			setDeleteflagStatus(deleteflagStatus);
		}

		String dummy = (String)attributes.get("dummy");

		if (dummy != null) {
			setDummy(dummy);
		}

		String workflowId = (String)attributes.get("workflowId");

		if (workflowId != null) {
			setWorkflowId(workflowId);
		}

		String nextapprove = (String)attributes.get("nextapprove");

		if (nextapprove != null) {
			setNextapprove(nextapprove);
		}

		String roleOfApprover = (String)attributes.get("roleOfApprover");

		if (roleOfApprover != null) {
			setRoleOfApprover(roleOfApprover);
		}

		String relatesTo = (String)attributes.get("relatesTo");

		if (relatesTo != null) {
			setRelatesTo(relatesTo);
		}

		String workflow = (String)attributes.get("workflow");

		if (workflow != null) {
			setWorkflow(workflow);
		}

		Integer workflowStep = (Integer)attributes.get("workflowStep");

		if (workflowStep != null) {
			setWorkflowStep(workflowStep);
		}

		Integer approverStep = (Integer)attributes.get("approverStep");

		if (approverStep != null) {
			setApproverStep(approverStep);
		}

		String refReqId = (String)attributes.get("refReqId");

		if (refReqId != null) {
			setRefReqId(refReqId);
		}

		String disapproveComments = (String)attributes.get("disapproveComments");

		if (disapproveComments != null) {
			setDisapproveComments(disapproveComments);
		}
	}

	@JSON
	@Override
	public String getRwfId() {
		if (_rwfId == null) {
			return StringPool.BLANK;
		}
		else {
			return _rwfId;
		}
	}

	@Override
	public void setRwfId(String rwfId) {
		_columnBitmask |= RWFID_COLUMN_BITMASK;

		if (_originalRwfId == null) {
			_originalRwfId = _rwfId;
		}

		_rwfId = rwfId;
	}

	public String getOriginalRwfId() {
		return GetterUtil.getString(_originalRwfId);
	}

	@JSON
	@Override
	public String getRId() {
		if (_rId == null) {
			return StringPool.BLANK;
		}
		else {
			return _rId;
		}
	}

	@Override
	public void setRId(String rId) {
		_columnBitmask = -1L;

		if (_originalRId == null) {
			_originalRId = _rId;
		}

		_rId = rId;
	}

	public String getOriginalRId() {
		return GetterUtil.getString(_originalRId);
	}

	@JSON
	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		_companyId = companyId;
	}

	@JSON
	@Override
	public long getScopeGroupId() {
		return _scopeGroupId;
	}

	@Override
	public void setScopeGroupId(long scopeGroupId) {
		_scopeGroupId = scopeGroupId;
	}

	@JSON
	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		_createDate = createDate;
	}

	@JSON
	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	public boolean hasSetModifiedDate() {
		return _setModifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_setModifiedDate = true;

		_modifiedDate = modifiedDate;
	}

	@JSON
	@Override
	public Date getApprovedDate() {
		return _ApprovedDate;
	}

	@Override
	public void setApprovedDate(Date ApprovedDate) {
		_ApprovedDate = ApprovedDate;
	}

	@JSON
	@Override
	public String getCreatedBy() {
		if (_createdBy == null) {
			return StringPool.BLANK;
		}
		else {
			return _createdBy;
		}
	}

	@Override
	public void setCreatedBy(String createdBy) {
		_createdBy = createdBy;
	}

	@JSON
	@Override
	public String getNumber() {
		if (_Number == null) {
			return StringPool.BLANK;
		}
		else {
			return _Number;
		}
	}

	@Override
	public void setNumber(String Number) {
		_columnBitmask |= NUMBER_COLUMN_BITMASK;

		if (_originalNumber == null) {
			_originalNumber = _Number;
		}

		_Number = Number;
	}

	public String getOriginalNumber() {
		return GetterUtil.getString(_originalNumber);
	}

	@JSON
	@Override
	public String getAssociatenumber() {
		if (_associatenumber == null) {
			return StringPool.BLANK;
		}
		else {
			return _associatenumber;
		}
	}

	@Override
	public void setAssociatenumber(String associatenumber) {
		_columnBitmask |= ASSOCIATENUMBER_COLUMN_BITMASK;

		if (_originalAssociatenumber == null) {
			_originalAssociatenumber = _associatenumber;
		}

		_associatenumber = associatenumber;
	}

	public String getOriginalAssociatenumber() {
		return GetterUtil.getString(_originalAssociatenumber);
	}

	@JSON
	@Override
	public String getAssociatename() {
		if (_associatename == null) {
			return StringPool.BLANK;
		}
		else {
			return _associatename;
		}
	}

	@Override
	public void setAssociatename(String associatename) {
		_associatename = associatename;
	}

	@JSON
	@Override
	public String getStatus() {
		if (_status == null) {
			return StringPool.BLANK;
		}
		else {
			return _status;
		}
	}

	@Override
	public void setStatus(String status) {
		_columnBitmask |= STATUS_COLUMN_BITMASK;

		if (_originalStatus == null) {
			_originalStatus = _status;
		}

		_status = status;
	}

	public String getOriginalStatus() {
		return GetterUtil.getString(_originalStatus);
	}

	@JSON
	@Override
	public String getPostingType() {
		if (_postingType == null) {
			return StringPool.BLANK;
		}
		else {
			return _postingType;
		}
	}

	@Override
	public void setPostingType(String postingType) {
		_postingType = postingType;
	}

	@JSON
	@Override
	public String getTeamNumber() {
		if (_teamNumber == null) {
			return StringPool.BLANK;
		}
		else {
			return _teamNumber;
		}
	}

	@Override
	public void setTeamNumber(String teamNumber) {
		_teamNumber = teamNumber;
	}

	@JSON
	@Override
	public String getAssociatetype() {
		if (_associatetype == null) {
			return StringPool.BLANK;
		}
		else {
			return _associatetype;
		}
	}

	@Override
	public void setAssociatetype(String associatetype) {
		_associatetype = associatetype;
	}

	@JSON
	@Override
	public String getShiftAssign() {
		if (_shiftAssign == null) {
			return StringPool.BLANK;
		}
		else {
			return _shiftAssign;
		}
	}

	@Override
	public void setShiftAssign(String shiftAssign) {
		_shiftAssign = shiftAssign;
	}

	@JSON
	@Override
	public String getHowAvailable() {
		if (_howAvailable == null) {
			return StringPool.BLANK;
		}
		else {
			return _howAvailable;
		}
	}

	@Override
	public void setHowAvailable(String howAvailable) {
		_howAvailable = howAvailable;
	}

	@JSON
	@Override
	public String getWhoReplaced() {
		if (_whoReplaced == null) {
			return StringPool.BLANK;
		}
		else {
			return _whoReplaced;
		}
	}

	@Override
	public void setWhoReplaced(String whoReplaced) {
		_whoReplaced = whoReplaced;
	}

	@JSON
	@Override
	public String getDateneeded() {
		if (_dateneeded == null) {
			return StringPool.BLANK;
		}
		else {
			return _dateneeded;
		}
	}

	@Override
	public void setDateneeded(String dateneeded) {
		_dateneeded = dateneeded;
	}

	@JSON
	@Override
	public String getContactperson() {
		if (_contactperson == null) {
			return StringPool.BLANK;
		}
		else {
			return _contactperson;
		}
	}

	@Override
	public void setContactperson(String contactperson) {
		_contactperson = contactperson;
	}

	@JSON
	@Override
	public String getContactphonenumber() {
		if (_contactphonenumber == null) {
			return StringPool.BLANK;
		}
		else {
			return _contactphonenumber;
		}
	}

	@Override
	public void setContactphonenumber(String contactphonenumber) {
		_contactphonenumber = contactphonenumber;
	}

	@JSON
	@Override
	public String getTaleonumber() {
		if (_taleonumber == null) {
			return StringPool.BLANK;
		}
		else {
			return _taleonumber;
		}
	}

	@Override
	public void setTaleonumber(String taleonumber) {
		_taleonumber = taleonumber;
	}

	@JSON
	@Override
	public String getOther() {
		if (_other == null) {
			return StringPool.BLANK;
		}
		else {
			return _other;
		}
	}

	@Override
	public void setOther(String other) {
		_other = other;
	}

	@JSON
	@Override
	public String getComments() {
		if (_comments == null) {
			return StringPool.BLANK;
		}
		else {
			return _comments;
		}
	}

	@Override
	public void setComments(String comments) {
		_comments = comments;
	}

	@JSON
	@Override
	public int getDeleteflagStatus() {
		return _deleteflagStatus;
	}

	@Override
	public void setDeleteflagStatus(int deleteflagStatus) {
		_deleteflagStatus = deleteflagStatus;
	}

	@JSON
	@Override
	public String getDummy() {
		if (_dummy == null) {
			return StringPool.BLANK;
		}
		else {
			return _dummy;
		}
	}

	@Override
	public void setDummy(String dummy) {
		_columnBitmask |= DUMMY_COLUMN_BITMASK;

		if (_originalDummy == null) {
			_originalDummy = _dummy;
		}

		_dummy = dummy;
	}

	public String getOriginalDummy() {
		return GetterUtil.getString(_originalDummy);
	}

	@JSON
	@Override
	public String getWorkflowId() {
		if (_workflowId == null) {
			return StringPool.BLANK;
		}
		else {
			return _workflowId;
		}
	}

	@Override
	public void setWorkflowId(String workflowId) {
		_columnBitmask |= WORKFLOWID_COLUMN_BITMASK;

		if (_originalWorkflowId == null) {
			_originalWorkflowId = _workflowId;
		}

		_workflowId = workflowId;
	}

	public String getOriginalWorkflowId() {
		return GetterUtil.getString(_originalWorkflowId);
	}

	@JSON
	@Override
	public String getNextapprove() {
		if (_nextapprove == null) {
			return StringPool.BLANK;
		}
		else {
			return _nextapprove;
		}
	}

	@Override
	public void setNextapprove(String nextapprove) {
		_columnBitmask |= NEXTAPPROVE_COLUMN_BITMASK;

		if (_originalNextapprove == null) {
			_originalNextapprove = _nextapprove;
		}

		_nextapprove = nextapprove;
	}

	public String getOriginalNextapprove() {
		return GetterUtil.getString(_originalNextapprove);
	}

	@JSON
	@Override
	public String getRoleOfApprover() {
		if (_roleOfApprover == null) {
			return StringPool.BLANK;
		}
		else {
			return _roleOfApprover;
		}
	}

	@Override
	public void setRoleOfApprover(String roleOfApprover) {
		_columnBitmask |= ROLEOFAPPROVER_COLUMN_BITMASK;

		if (_originalRoleOfApprover == null) {
			_originalRoleOfApprover = _roleOfApprover;
		}

		_roleOfApprover = roleOfApprover;
	}

	public String getOriginalRoleOfApprover() {
		return GetterUtil.getString(_originalRoleOfApprover);
	}

	@JSON
	@Override
	public String getRelatesTo() {
		if (_relatesTo == null) {
			return StringPool.BLANK;
		}
		else {
			return _relatesTo;
		}
	}

	@Override
	public void setRelatesTo(String relatesTo) {
		_relatesTo = relatesTo;
	}

	@JSON
	@Override
	public String getWorkflow() {
		if (_workflow == null) {
			return StringPool.BLANK;
		}
		else {
			return _workflow;
		}
	}

	@Override
	public void setWorkflow(String workflow) {
		_workflow = workflow;
	}

	@JSON
	@Override
	public int getWorkflowStep() {
		return _workflowStep;
	}

	@Override
	public void setWorkflowStep(int workflowStep) {
		_workflowStep = workflowStep;
	}

	@JSON
	@Override
	public int getApproverStep() {
		return _approverStep;
	}

	@Override
	public void setApproverStep(int approverStep) {
		_approverStep = approverStep;
	}

	@JSON
	@Override
	public String getRefReqId() {
		if (_refReqId == null) {
			return StringPool.BLANK;
		}
		else {
			return _refReqId;
		}
	}

	@Override
	public void setRefReqId(String refReqId) {
		_refReqId = refReqId;
	}

	@JSON
	@Override
	public String getDisapproveComments() {
		if (_disapproveComments == null) {
			return StringPool.BLANK;
		}
		else {
			return _disapproveComments;
		}
	}

	@Override
	public void setDisapproveComments(String disapproveComments) {
		_disapproveComments = disapproveComments;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public WFMS_Requisition toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (WFMS_Requisition)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		WFMS_RequisitionImpl wfms_RequisitionImpl = new WFMS_RequisitionImpl();

		wfms_RequisitionImpl.setRwfId(getRwfId());
		wfms_RequisitionImpl.setRId(getRId());
		wfms_RequisitionImpl.setCompanyId(getCompanyId());
		wfms_RequisitionImpl.setScopeGroupId(getScopeGroupId());
		wfms_RequisitionImpl.setCreateDate(getCreateDate());
		wfms_RequisitionImpl.setModifiedDate(getModifiedDate());
		wfms_RequisitionImpl.setApprovedDate(getApprovedDate());
		wfms_RequisitionImpl.setCreatedBy(getCreatedBy());
		wfms_RequisitionImpl.setNumber(getNumber());
		wfms_RequisitionImpl.setAssociatenumber(getAssociatenumber());
		wfms_RequisitionImpl.setAssociatename(getAssociatename());
		wfms_RequisitionImpl.setStatus(getStatus());
		wfms_RequisitionImpl.setPostingType(getPostingType());
		wfms_RequisitionImpl.setTeamNumber(getTeamNumber());
		wfms_RequisitionImpl.setAssociatetype(getAssociatetype());
		wfms_RequisitionImpl.setShiftAssign(getShiftAssign());
		wfms_RequisitionImpl.setHowAvailable(getHowAvailable());
		wfms_RequisitionImpl.setWhoReplaced(getWhoReplaced());
		wfms_RequisitionImpl.setDateneeded(getDateneeded());
		wfms_RequisitionImpl.setContactperson(getContactperson());
		wfms_RequisitionImpl.setContactphonenumber(getContactphonenumber());
		wfms_RequisitionImpl.setTaleonumber(getTaleonumber());
		wfms_RequisitionImpl.setOther(getOther());
		wfms_RequisitionImpl.setComments(getComments());
		wfms_RequisitionImpl.setDeleteflagStatus(getDeleteflagStatus());
		wfms_RequisitionImpl.setDummy(getDummy());
		wfms_RequisitionImpl.setWorkflowId(getWorkflowId());
		wfms_RequisitionImpl.setNextapprove(getNextapprove());
		wfms_RequisitionImpl.setRoleOfApprover(getRoleOfApprover());
		wfms_RequisitionImpl.setRelatesTo(getRelatesTo());
		wfms_RequisitionImpl.setWorkflow(getWorkflow());
		wfms_RequisitionImpl.setWorkflowStep(getWorkflowStep());
		wfms_RequisitionImpl.setApproverStep(getApproverStep());
		wfms_RequisitionImpl.setRefReqId(getRefReqId());
		wfms_RequisitionImpl.setDisapproveComments(getDisapproveComments());

		wfms_RequisitionImpl.resetOriginalValues();

		return wfms_RequisitionImpl;
	}

	@Override
	public int compareTo(WFMS_Requisition wfms_Requisition) {
		int value = 0;

		value = getRId().compareTo(wfms_Requisition.getRId());

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof WFMS_Requisition)) {
			return false;
		}

		WFMS_Requisition wfms_Requisition = (WFMS_Requisition)obj;

		String primaryKey = wfms_Requisition.getPrimaryKey();

		if (getPrimaryKey().equals(primaryKey)) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return getPrimaryKey().hashCode();
	}

	@Override
	public boolean isEntityCacheEnabled() {
		return ENTITY_CACHE_ENABLED;
	}

	@Override
	public boolean isFinderCacheEnabled() {
		return FINDER_CACHE_ENABLED;
	}

	@Override
	public void resetOriginalValues() {
		WFMS_RequisitionModelImpl wfms_RequisitionModelImpl = this;

		wfms_RequisitionModelImpl._originalRwfId = wfms_RequisitionModelImpl._rwfId;

		wfms_RequisitionModelImpl._originalRId = wfms_RequisitionModelImpl._rId;

		wfms_RequisitionModelImpl._setModifiedDate = false;

		wfms_RequisitionModelImpl._originalNumber = wfms_RequisitionModelImpl._Number;

		wfms_RequisitionModelImpl._originalAssociatenumber = wfms_RequisitionModelImpl._associatenumber;

		wfms_RequisitionModelImpl._originalStatus = wfms_RequisitionModelImpl._status;

		wfms_RequisitionModelImpl._originalDummy = wfms_RequisitionModelImpl._dummy;

		wfms_RequisitionModelImpl._originalWorkflowId = wfms_RequisitionModelImpl._workflowId;

		wfms_RequisitionModelImpl._originalNextapprove = wfms_RequisitionModelImpl._nextapprove;

		wfms_RequisitionModelImpl._originalRoleOfApprover = wfms_RequisitionModelImpl._roleOfApprover;

		wfms_RequisitionModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<WFMS_Requisition> toCacheModel() {
		WFMS_RequisitionCacheModel wfms_RequisitionCacheModel = new WFMS_RequisitionCacheModel();

		wfms_RequisitionCacheModel.rwfId = getRwfId();

		String rwfId = wfms_RequisitionCacheModel.rwfId;

		if ((rwfId != null) && (rwfId.length() == 0)) {
			wfms_RequisitionCacheModel.rwfId = null;
		}

		wfms_RequisitionCacheModel.rId = getRId();

		String rId = wfms_RequisitionCacheModel.rId;

		if ((rId != null) && (rId.length() == 0)) {
			wfms_RequisitionCacheModel.rId = null;
		}

		wfms_RequisitionCacheModel.companyId = getCompanyId();

		wfms_RequisitionCacheModel.scopeGroupId = getScopeGroupId();

		Date createDate = getCreateDate();

		if (createDate != null) {
			wfms_RequisitionCacheModel.createDate = createDate.getTime();
		}
		else {
			wfms_RequisitionCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			wfms_RequisitionCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			wfms_RequisitionCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		Date ApprovedDate = getApprovedDate();

		if (ApprovedDate != null) {
			wfms_RequisitionCacheModel.ApprovedDate = ApprovedDate.getTime();
		}
		else {
			wfms_RequisitionCacheModel.ApprovedDate = Long.MIN_VALUE;
		}

		wfms_RequisitionCacheModel.createdBy = getCreatedBy();

		String createdBy = wfms_RequisitionCacheModel.createdBy;

		if ((createdBy != null) && (createdBy.length() == 0)) {
			wfms_RequisitionCacheModel.createdBy = null;
		}

		wfms_RequisitionCacheModel.Number = getNumber();

		String Number = wfms_RequisitionCacheModel.Number;

		if ((Number != null) && (Number.length() == 0)) {
			wfms_RequisitionCacheModel.Number = null;
		}

		wfms_RequisitionCacheModel.associatenumber = getAssociatenumber();

		String associatenumber = wfms_RequisitionCacheModel.associatenumber;

		if ((associatenumber != null) && (associatenumber.length() == 0)) {
			wfms_RequisitionCacheModel.associatenumber = null;
		}

		wfms_RequisitionCacheModel.associatename = getAssociatename();

		String associatename = wfms_RequisitionCacheModel.associatename;

		if ((associatename != null) && (associatename.length() == 0)) {
			wfms_RequisitionCacheModel.associatename = null;
		}

		wfms_RequisitionCacheModel.status = getStatus();

		String status = wfms_RequisitionCacheModel.status;

		if ((status != null) && (status.length() == 0)) {
			wfms_RequisitionCacheModel.status = null;
		}

		wfms_RequisitionCacheModel.postingType = getPostingType();

		String postingType = wfms_RequisitionCacheModel.postingType;

		if ((postingType != null) && (postingType.length() == 0)) {
			wfms_RequisitionCacheModel.postingType = null;
		}

		wfms_RequisitionCacheModel.teamNumber = getTeamNumber();

		String teamNumber = wfms_RequisitionCacheModel.teamNumber;

		if ((teamNumber != null) && (teamNumber.length() == 0)) {
			wfms_RequisitionCacheModel.teamNumber = null;
		}

		wfms_RequisitionCacheModel.associatetype = getAssociatetype();

		String associatetype = wfms_RequisitionCacheModel.associatetype;

		if ((associatetype != null) && (associatetype.length() == 0)) {
			wfms_RequisitionCacheModel.associatetype = null;
		}

		wfms_RequisitionCacheModel.shiftAssign = getShiftAssign();

		String shiftAssign = wfms_RequisitionCacheModel.shiftAssign;

		if ((shiftAssign != null) && (shiftAssign.length() == 0)) {
			wfms_RequisitionCacheModel.shiftAssign = null;
		}

		wfms_RequisitionCacheModel.howAvailable = getHowAvailable();

		String howAvailable = wfms_RequisitionCacheModel.howAvailable;

		if ((howAvailable != null) && (howAvailable.length() == 0)) {
			wfms_RequisitionCacheModel.howAvailable = null;
		}

		wfms_RequisitionCacheModel.whoReplaced = getWhoReplaced();

		String whoReplaced = wfms_RequisitionCacheModel.whoReplaced;

		if ((whoReplaced != null) && (whoReplaced.length() == 0)) {
			wfms_RequisitionCacheModel.whoReplaced = null;
		}

		wfms_RequisitionCacheModel.dateneeded = getDateneeded();

		String dateneeded = wfms_RequisitionCacheModel.dateneeded;

		if ((dateneeded != null) && (dateneeded.length() == 0)) {
			wfms_RequisitionCacheModel.dateneeded = null;
		}

		wfms_RequisitionCacheModel.contactperson = getContactperson();

		String contactperson = wfms_RequisitionCacheModel.contactperson;

		if ((contactperson != null) && (contactperson.length() == 0)) {
			wfms_RequisitionCacheModel.contactperson = null;
		}

		wfms_RequisitionCacheModel.contactphonenumber = getContactphonenumber();

		String contactphonenumber = wfms_RequisitionCacheModel.contactphonenumber;

		if ((contactphonenumber != null) && (contactphonenumber.length() == 0)) {
			wfms_RequisitionCacheModel.contactphonenumber = null;
		}

		wfms_RequisitionCacheModel.taleonumber = getTaleonumber();

		String taleonumber = wfms_RequisitionCacheModel.taleonumber;

		if ((taleonumber != null) && (taleonumber.length() == 0)) {
			wfms_RequisitionCacheModel.taleonumber = null;
		}

		wfms_RequisitionCacheModel.other = getOther();

		String other = wfms_RequisitionCacheModel.other;

		if ((other != null) && (other.length() == 0)) {
			wfms_RequisitionCacheModel.other = null;
		}

		wfms_RequisitionCacheModel.comments = getComments();

		String comments = wfms_RequisitionCacheModel.comments;

		if ((comments != null) && (comments.length() == 0)) {
			wfms_RequisitionCacheModel.comments = null;
		}

		wfms_RequisitionCacheModel.deleteflagStatus = getDeleteflagStatus();

		wfms_RequisitionCacheModel.dummy = getDummy();

		String dummy = wfms_RequisitionCacheModel.dummy;

		if ((dummy != null) && (dummy.length() == 0)) {
			wfms_RequisitionCacheModel.dummy = null;
		}

		wfms_RequisitionCacheModel.workflowId = getWorkflowId();

		String workflowId = wfms_RequisitionCacheModel.workflowId;

		if ((workflowId != null) && (workflowId.length() == 0)) {
			wfms_RequisitionCacheModel.workflowId = null;
		}

		wfms_RequisitionCacheModel.nextapprove = getNextapprove();

		String nextapprove = wfms_RequisitionCacheModel.nextapprove;

		if ((nextapprove != null) && (nextapprove.length() == 0)) {
			wfms_RequisitionCacheModel.nextapprove = null;
		}

		wfms_RequisitionCacheModel.roleOfApprover = getRoleOfApprover();

		String roleOfApprover = wfms_RequisitionCacheModel.roleOfApprover;

		if ((roleOfApprover != null) && (roleOfApprover.length() == 0)) {
			wfms_RequisitionCacheModel.roleOfApprover = null;
		}

		wfms_RequisitionCacheModel.relatesTo = getRelatesTo();

		String relatesTo = wfms_RequisitionCacheModel.relatesTo;

		if ((relatesTo != null) && (relatesTo.length() == 0)) {
			wfms_RequisitionCacheModel.relatesTo = null;
		}

		wfms_RequisitionCacheModel.workflow = getWorkflow();

		String workflow = wfms_RequisitionCacheModel.workflow;

		if ((workflow != null) && (workflow.length() == 0)) {
			wfms_RequisitionCacheModel.workflow = null;
		}

		wfms_RequisitionCacheModel.workflowStep = getWorkflowStep();

		wfms_RequisitionCacheModel.approverStep = getApproverStep();

		wfms_RequisitionCacheModel.refReqId = getRefReqId();

		String refReqId = wfms_RequisitionCacheModel.refReqId;

		if ((refReqId != null) && (refReqId.length() == 0)) {
			wfms_RequisitionCacheModel.refReqId = null;
		}

		wfms_RequisitionCacheModel.disapproveComments = getDisapproveComments();

		String disapproveComments = wfms_RequisitionCacheModel.disapproveComments;

		if ((disapproveComments != null) && (disapproveComments.length() == 0)) {
			wfms_RequisitionCacheModel.disapproveComments = null;
		}

		return wfms_RequisitionCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(71);

		sb.append("{rwfId=");
		sb.append(getRwfId());
		sb.append(", rId=");
		sb.append(getRId());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append(", scopeGroupId=");
		sb.append(getScopeGroupId());
		sb.append(", createDate=");
		sb.append(getCreateDate());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append(", ApprovedDate=");
		sb.append(getApprovedDate());
		sb.append(", createdBy=");
		sb.append(getCreatedBy());
		sb.append(", Number=");
		sb.append(getNumber());
		sb.append(", associatenumber=");
		sb.append(getAssociatenumber());
		sb.append(", associatename=");
		sb.append(getAssociatename());
		sb.append(", status=");
		sb.append(getStatus());
		sb.append(", postingType=");
		sb.append(getPostingType());
		sb.append(", teamNumber=");
		sb.append(getTeamNumber());
		sb.append(", associatetype=");
		sb.append(getAssociatetype());
		sb.append(", shiftAssign=");
		sb.append(getShiftAssign());
		sb.append(", howAvailable=");
		sb.append(getHowAvailable());
		sb.append(", whoReplaced=");
		sb.append(getWhoReplaced());
		sb.append(", dateneeded=");
		sb.append(getDateneeded());
		sb.append(", contactperson=");
		sb.append(getContactperson());
		sb.append(", contactphonenumber=");
		sb.append(getContactphonenumber());
		sb.append(", taleonumber=");
		sb.append(getTaleonumber());
		sb.append(", other=");
		sb.append(getOther());
		sb.append(", comments=");
		sb.append(getComments());
		sb.append(", deleteflagStatus=");
		sb.append(getDeleteflagStatus());
		sb.append(", dummy=");
		sb.append(getDummy());
		sb.append(", workflowId=");
		sb.append(getWorkflowId());
		sb.append(", nextapprove=");
		sb.append(getNextapprove());
		sb.append(", roleOfApprover=");
		sb.append(getRoleOfApprover());
		sb.append(", relatesTo=");
		sb.append(getRelatesTo());
		sb.append(", workflow=");
		sb.append(getWorkflow());
		sb.append(", workflowStep=");
		sb.append(getWorkflowStep());
		sb.append(", approverStep=");
		sb.append(getApproverStep());
		sb.append(", refReqId=");
		sb.append(getRefReqId());
		sb.append(", disapproveComments=");
		sb.append(getDisapproveComments());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(109);

		sb.append("<model><model-name>");
		sb.append("com.ys.hmawfm.wfms.services.model.WFMS_Requisition");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>rwfId</column-name><column-value><![CDATA[");
		sb.append(getRwfId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>rId</column-name><column-value><![CDATA[");
		sb.append(getRId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>scopeGroupId</column-name><column-value><![CDATA[");
		sb.append(getScopeGroupId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createDate</column-name><column-value><![CDATA[");
		sb.append(getCreateDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>ApprovedDate</column-name><column-value><![CDATA[");
		sb.append(getApprovedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createdBy</column-name><column-value><![CDATA[");
		sb.append(getCreatedBy());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>Number</column-name><column-value><![CDATA[");
		sb.append(getNumber());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>associatenumber</column-name><column-value><![CDATA[");
		sb.append(getAssociatenumber());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>associatename</column-name><column-value><![CDATA[");
		sb.append(getAssociatename());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>status</column-name><column-value><![CDATA[");
		sb.append(getStatus());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>postingType</column-name><column-value><![CDATA[");
		sb.append(getPostingType());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>teamNumber</column-name><column-value><![CDATA[");
		sb.append(getTeamNumber());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>associatetype</column-name><column-value><![CDATA[");
		sb.append(getAssociatetype());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>shiftAssign</column-name><column-value><![CDATA[");
		sb.append(getShiftAssign());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>howAvailable</column-name><column-value><![CDATA[");
		sb.append(getHowAvailable());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>whoReplaced</column-name><column-value><![CDATA[");
		sb.append(getWhoReplaced());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>dateneeded</column-name><column-value><![CDATA[");
		sb.append(getDateneeded());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>contactperson</column-name><column-value><![CDATA[");
		sb.append(getContactperson());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>contactphonenumber</column-name><column-value><![CDATA[");
		sb.append(getContactphonenumber());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>taleonumber</column-name><column-value><![CDATA[");
		sb.append(getTaleonumber());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>other</column-name><column-value><![CDATA[");
		sb.append(getOther());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>comments</column-name><column-value><![CDATA[");
		sb.append(getComments());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>deleteflagStatus</column-name><column-value><![CDATA[");
		sb.append(getDeleteflagStatus());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>dummy</column-name><column-value><![CDATA[");
		sb.append(getDummy());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>workflowId</column-name><column-value><![CDATA[");
		sb.append(getWorkflowId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>nextapprove</column-name><column-value><![CDATA[");
		sb.append(getNextapprove());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>roleOfApprover</column-name><column-value><![CDATA[");
		sb.append(getRoleOfApprover());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>relatesTo</column-name><column-value><![CDATA[");
		sb.append(getRelatesTo());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>workflow</column-name><column-value><![CDATA[");
		sb.append(getWorkflow());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>workflowStep</column-name><column-value><![CDATA[");
		sb.append(getWorkflowStep());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>approverStep</column-name><column-value><![CDATA[");
		sb.append(getApproverStep());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>refReqId</column-name><column-value><![CDATA[");
		sb.append(getRefReqId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>disapproveComments</column-name><column-value><![CDATA[");
		sb.append(getDisapproveComments());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static final ClassLoader _classLoader = WFMS_Requisition.class.getClassLoader();
	private static final Class<?>[] _escapedModelInterfaces = new Class[] {
			WFMS_Requisition.class
		};
	private String _rwfId;
	private String _originalRwfId;
	private String _rId;
	private String _originalRId;
	private long _companyId;
	private long _scopeGroupId;
	private Date _createDate;
	private Date _modifiedDate;
	private boolean _setModifiedDate;
	private Date _ApprovedDate;
	private String _createdBy;
	private String _Number;
	private String _originalNumber;
	private String _associatenumber;
	private String _originalAssociatenumber;
	private String _associatename;
	private String _status;
	private String _originalStatus;
	private String _postingType;
	private String _teamNumber;
	private String _associatetype;
	private String _shiftAssign;
	private String _howAvailable;
	private String _whoReplaced;
	private String _dateneeded;
	private String _contactperson;
	private String _contactphonenumber;
	private String _taleonumber;
	private String _other;
	private String _comments;
	private int _deleteflagStatus;
	private String _dummy;
	private String _originalDummy;
	private String _workflowId;
	private String _originalWorkflowId;
	private String _nextapprove;
	private String _originalNextapprove;
	private String _roleOfApprover;
	private String _originalRoleOfApprover;
	private String _relatesTo;
	private String _workflow;
	private int _workflowStep;
	private int _approverStep;
	private String _refReqId;
	private String _disapproveComments;
	private long _columnBitmask;
	private WFMS_Requisition _escapedModel;
}