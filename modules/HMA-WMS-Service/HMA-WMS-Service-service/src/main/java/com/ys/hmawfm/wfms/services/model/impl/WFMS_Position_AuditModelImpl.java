/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.ys.hmawfm.wfms.services.model.impl;

import aQute.bnd.annotation.ProviderType;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.PortalException;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.User;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.service.UserLocalServiceUtil;
import com.liferay.portal.kernel.util.DateUtil;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;

import com.ys.hmawfm.wfms.services.model.WFMS_Position_Audit;
import com.ys.hmawfm.wfms.services.model.WFMS_Position_AuditModel;
import com.ys.hmawfm.wfms.services.model.WFMS_Position_AuditSoap;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the WFMS_Position_Audit service. Represents a row in the &quot;WFMS_Position_Audit&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link WFMS_Position_AuditModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link WFMS_Position_AuditImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see WFMS_Position_AuditImpl
 * @see WFMS_Position_Audit
 * @see WFMS_Position_AuditModel
 * @generated
 */
@JSON(strict = true)
@ProviderType
public class WFMS_Position_AuditModelImpl extends BaseModelImpl<WFMS_Position_Audit>
	implements WFMS_Position_AuditModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a WFMS_Position_Audit model instance should use the {@link WFMS_Position_Audit} interface instead.
	 */
	public static final String TABLE_NAME = "WFMS_Position_Audit";
	public static final Object[][] TABLE_COLUMNS = {
			{ "paId", Types.VARCHAR },
			{ "pId", Types.VARCHAR },
			{ "userId", Types.BIGINT },
			{ "associateId", Types.VARCHAR },
			{ "change_", Types.VARCHAR },
			{ "fromPId", Types.VARCHAR },
			{ "comments", Types.VARCHAR },
			{ "createdBy", Types.VARCHAR },
			{ "createDate", Types.TIMESTAMP }
		};
	public static final Map<String, Integer> TABLE_COLUMNS_MAP = new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("paId", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("pId", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("userId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("associateId", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("change_", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("fromPId", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("comments", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("createdBy", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("createDate", Types.TIMESTAMP);
	}

	public static final String TABLE_SQL_CREATE = "create table WFMS_Position_Audit (paId VARCHAR(75) not null primary key,pId VARCHAR(75) null,userId LONG,associateId VARCHAR(75) null,change_ TEXT null,fromPId VARCHAR(75) null,comments TEXT null,createdBy VARCHAR(75) null,createDate DATE null)";
	public static final String TABLE_SQL_DROP = "drop table WFMS_Position_Audit";
	public static final String ORDER_BY_JPQL = " ORDER BY wfms_Position_Audit.createDate DESC";
	public static final String ORDER_BY_SQL = " ORDER BY WFMS_Position_Audit.createDate DESC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.ys.hmawfm.wfms.services.service.util.ServiceProps.get(
				"value.object.entity.cache.enabled.com.ys.hmawfm.wfms.services.model.WFMS_Position_Audit"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.ys.hmawfm.wfms.services.service.util.ServiceProps.get(
				"value.object.finder.cache.enabled.com.ys.hmawfm.wfms.services.model.WFMS_Position_Audit"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.ys.hmawfm.wfms.services.service.util.ServiceProps.get(
				"value.object.column.bitmask.enabled.com.ys.hmawfm.wfms.services.model.WFMS_Position_Audit"),
			true);
	public static final long PID_COLUMN_BITMASK = 1L;
	public static final long CREATEDATE_COLUMN_BITMASK = 2L;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static WFMS_Position_Audit toModel(WFMS_Position_AuditSoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		WFMS_Position_Audit model = new WFMS_Position_AuditImpl();

		model.setPaId(soapModel.getPaId());
		model.setPId(soapModel.getPId());
		model.setUserId(soapModel.getUserId());
		model.setAssociateId(soapModel.getAssociateId());
		model.setChange(soapModel.getChange());
		model.setFromPId(soapModel.getFromPId());
		model.setComments(soapModel.getComments());
		model.setCreatedBy(soapModel.getCreatedBy());
		model.setCreateDate(soapModel.getCreateDate());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<WFMS_Position_Audit> toModels(
		WFMS_Position_AuditSoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<WFMS_Position_Audit> models = new ArrayList<WFMS_Position_Audit>(soapModels.length);

		for (WFMS_Position_AuditSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.ys.hmawfm.wfms.services.service.util.ServiceProps.get(
				"lock.expiration.time.com.ys.hmawfm.wfms.services.model.WFMS_Position_Audit"));

	public WFMS_Position_AuditModelImpl() {
	}

	@Override
	public String getPrimaryKey() {
		return _paId;
	}

	@Override
	public void setPrimaryKey(String primaryKey) {
		setPaId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _paId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey((String)primaryKeyObj);
	}

	@Override
	public Class<?> getModelClass() {
		return WFMS_Position_Audit.class;
	}

	@Override
	public String getModelClassName() {
		return WFMS_Position_Audit.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("paId", getPaId());
		attributes.put("pId", getPId());
		attributes.put("userId", getUserId());
		attributes.put("associateId", getAssociateId());
		attributes.put("change", getChange());
		attributes.put("fromPId", getFromPId());
		attributes.put("comments", getComments());
		attributes.put("createdBy", getCreatedBy());
		attributes.put("createDate", getCreateDate());

		attributes.put("entityCacheEnabled", isEntityCacheEnabled());
		attributes.put("finderCacheEnabled", isFinderCacheEnabled());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		String paId = (String)attributes.get("paId");

		if (paId != null) {
			setPaId(paId);
		}

		String pId = (String)attributes.get("pId");

		if (pId != null) {
			setPId(pId);
		}

		Long userId = (Long)attributes.get("userId");

		if (userId != null) {
			setUserId(userId);
		}

		String associateId = (String)attributes.get("associateId");

		if (associateId != null) {
			setAssociateId(associateId);
		}

		String change = (String)attributes.get("change");

		if (change != null) {
			setChange(change);
		}

		String fromPId = (String)attributes.get("fromPId");

		if (fromPId != null) {
			setFromPId(fromPId);
		}

		String comments = (String)attributes.get("comments");

		if (comments != null) {
			setComments(comments);
		}

		String createdBy = (String)attributes.get("createdBy");

		if (createdBy != null) {
			setCreatedBy(createdBy);
		}

		Date createDate = (Date)attributes.get("createDate");

		if (createDate != null) {
			setCreateDate(createDate);
		}
	}

	@JSON
	@Override
	public String getPaId() {
		if (_paId == null) {
			return StringPool.BLANK;
		}
		else {
			return _paId;
		}
	}

	@Override
	public void setPaId(String paId) {
		_paId = paId;
	}

	@JSON
	@Override
	public String getPId() {
		if (_pId == null) {
			return StringPool.BLANK;
		}
		else {
			return _pId;
		}
	}

	@Override
	public void setPId(String pId) {
		_columnBitmask |= PID_COLUMN_BITMASK;

		if (_originalPId == null) {
			_originalPId = _pId;
		}

		_pId = pId;
	}

	public String getOriginalPId() {
		return GetterUtil.getString(_originalPId);
	}

	@JSON
	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		_userId = userId;
	}

	@Override
	public String getUserUuid() {
		try {
			User user = UserLocalServiceUtil.getUserById(getUserId());

			return user.getUuid();
		}
		catch (PortalException pe) {
			return StringPool.BLANK;
		}
	}

	@Override
	public void setUserUuid(String userUuid) {
	}

	@JSON
	@Override
	public String getAssociateId() {
		if (_associateId == null) {
			return StringPool.BLANK;
		}
		else {
			return _associateId;
		}
	}

	@Override
	public void setAssociateId(String associateId) {
		_associateId = associateId;
	}

	@JSON
	@Override
	public String getChange() {
		if (_change == null) {
			return StringPool.BLANK;
		}
		else {
			return _change;
		}
	}

	@Override
	public void setChange(String change) {
		_change = change;
	}

	@JSON
	@Override
	public String getFromPId() {
		if (_fromPId == null) {
			return StringPool.BLANK;
		}
		else {
			return _fromPId;
		}
	}

	@Override
	public void setFromPId(String fromPId) {
		_fromPId = fromPId;
	}

	@JSON
	@Override
	public String getComments() {
		if (_comments == null) {
			return StringPool.BLANK;
		}
		else {
			return _comments;
		}
	}

	@Override
	public void setComments(String comments) {
		_comments = comments;
	}

	@JSON
	@Override
	public String getCreatedBy() {
		if (_createdBy == null) {
			return StringPool.BLANK;
		}
		else {
			return _createdBy;
		}
	}

	@Override
	public void setCreatedBy(String createdBy) {
		_createdBy = createdBy;
	}

	@JSON
	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		_columnBitmask = -1L;

		_createDate = createDate;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public WFMS_Position_Audit toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (WFMS_Position_Audit)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		WFMS_Position_AuditImpl wfms_Position_AuditImpl = new WFMS_Position_AuditImpl();

		wfms_Position_AuditImpl.setPaId(getPaId());
		wfms_Position_AuditImpl.setPId(getPId());
		wfms_Position_AuditImpl.setUserId(getUserId());
		wfms_Position_AuditImpl.setAssociateId(getAssociateId());
		wfms_Position_AuditImpl.setChange(getChange());
		wfms_Position_AuditImpl.setFromPId(getFromPId());
		wfms_Position_AuditImpl.setComments(getComments());
		wfms_Position_AuditImpl.setCreatedBy(getCreatedBy());
		wfms_Position_AuditImpl.setCreateDate(getCreateDate());

		wfms_Position_AuditImpl.resetOriginalValues();

		return wfms_Position_AuditImpl;
	}

	@Override
	public int compareTo(WFMS_Position_Audit wfms_Position_Audit) {
		int value = 0;

		value = DateUtil.compareTo(getCreateDate(),
				wfms_Position_Audit.getCreateDate());

		value = value * -1;

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof WFMS_Position_Audit)) {
			return false;
		}

		WFMS_Position_Audit wfms_Position_Audit = (WFMS_Position_Audit)obj;

		String primaryKey = wfms_Position_Audit.getPrimaryKey();

		if (getPrimaryKey().equals(primaryKey)) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return getPrimaryKey().hashCode();
	}

	@Override
	public boolean isEntityCacheEnabled() {
		return ENTITY_CACHE_ENABLED;
	}

	@Override
	public boolean isFinderCacheEnabled() {
		return FINDER_CACHE_ENABLED;
	}

	@Override
	public void resetOriginalValues() {
		WFMS_Position_AuditModelImpl wfms_Position_AuditModelImpl = this;

		wfms_Position_AuditModelImpl._originalPId = wfms_Position_AuditModelImpl._pId;

		wfms_Position_AuditModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<WFMS_Position_Audit> toCacheModel() {
		WFMS_Position_AuditCacheModel wfms_Position_AuditCacheModel = new WFMS_Position_AuditCacheModel();

		wfms_Position_AuditCacheModel.paId = getPaId();

		String paId = wfms_Position_AuditCacheModel.paId;

		if ((paId != null) && (paId.length() == 0)) {
			wfms_Position_AuditCacheModel.paId = null;
		}

		wfms_Position_AuditCacheModel.pId = getPId();

		String pId = wfms_Position_AuditCacheModel.pId;

		if ((pId != null) && (pId.length() == 0)) {
			wfms_Position_AuditCacheModel.pId = null;
		}

		wfms_Position_AuditCacheModel.userId = getUserId();

		wfms_Position_AuditCacheModel.associateId = getAssociateId();

		String associateId = wfms_Position_AuditCacheModel.associateId;

		if ((associateId != null) && (associateId.length() == 0)) {
			wfms_Position_AuditCacheModel.associateId = null;
		}

		wfms_Position_AuditCacheModel.change = getChange();

		String change = wfms_Position_AuditCacheModel.change;

		if ((change != null) && (change.length() == 0)) {
			wfms_Position_AuditCacheModel.change = null;
		}

		wfms_Position_AuditCacheModel.fromPId = getFromPId();

		String fromPId = wfms_Position_AuditCacheModel.fromPId;

		if ((fromPId != null) && (fromPId.length() == 0)) {
			wfms_Position_AuditCacheModel.fromPId = null;
		}

		wfms_Position_AuditCacheModel.comments = getComments();

		String comments = wfms_Position_AuditCacheModel.comments;

		if ((comments != null) && (comments.length() == 0)) {
			wfms_Position_AuditCacheModel.comments = null;
		}

		wfms_Position_AuditCacheModel.createdBy = getCreatedBy();

		String createdBy = wfms_Position_AuditCacheModel.createdBy;

		if ((createdBy != null) && (createdBy.length() == 0)) {
			wfms_Position_AuditCacheModel.createdBy = null;
		}

		Date createDate = getCreateDate();

		if (createDate != null) {
			wfms_Position_AuditCacheModel.createDate = createDate.getTime();
		}
		else {
			wfms_Position_AuditCacheModel.createDate = Long.MIN_VALUE;
		}

		return wfms_Position_AuditCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(19);

		sb.append("{paId=");
		sb.append(getPaId());
		sb.append(", pId=");
		sb.append(getPId());
		sb.append(", userId=");
		sb.append(getUserId());
		sb.append(", associateId=");
		sb.append(getAssociateId());
		sb.append(", change=");
		sb.append(getChange());
		sb.append(", fromPId=");
		sb.append(getFromPId());
		sb.append(", comments=");
		sb.append(getComments());
		sb.append(", createdBy=");
		sb.append(getCreatedBy());
		sb.append(", createDate=");
		sb.append(getCreateDate());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(31);

		sb.append("<model><model-name>");
		sb.append("com.ys.hmawfm.wfms.services.model.WFMS_Position_Audit");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>paId</column-name><column-value><![CDATA[");
		sb.append(getPaId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>pId</column-name><column-value><![CDATA[");
		sb.append(getPId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userId</column-name><column-value><![CDATA[");
		sb.append(getUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>associateId</column-name><column-value><![CDATA[");
		sb.append(getAssociateId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>change</column-name><column-value><![CDATA[");
		sb.append(getChange());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>fromPId</column-name><column-value><![CDATA[");
		sb.append(getFromPId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>comments</column-name><column-value><![CDATA[");
		sb.append(getComments());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createdBy</column-name><column-value><![CDATA[");
		sb.append(getCreatedBy());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createDate</column-name><column-value><![CDATA[");
		sb.append(getCreateDate());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static final ClassLoader _classLoader = WFMS_Position_Audit.class.getClassLoader();
	private static final Class<?>[] _escapedModelInterfaces = new Class[] {
			WFMS_Position_Audit.class
		};
	private String _paId;
	private String _pId;
	private String _originalPId;
	private long _userId;
	private String _associateId;
	private String _change;
	private String _fromPId;
	private String _comments;
	private String _createdBy;
	private Date _createDate;
	private long _columnBitmask;
	private WFMS_Position_Audit _escapedModel;
}