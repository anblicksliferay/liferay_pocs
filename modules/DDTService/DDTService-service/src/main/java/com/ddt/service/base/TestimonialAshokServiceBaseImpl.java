/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.ddt.service.base;

import com.ddt.model.TestimonialAshok;

import com.ddt.service.TestimonialAshokService;
import com.ddt.service.persistence.FAQSAshokPersistence;
import com.ddt.service.persistence.Loc_Course_InfoPersistence;
import com.ddt.service.persistence.NewsAshokPersistence;
import com.ddt.service.persistence.TestimonialAshokPersistence;

import com.liferay.portal.kernel.bean.BeanReference;
import com.liferay.portal.kernel.dao.db.DB;
import com.liferay.portal.kernel.dao.db.DBManagerUtil;
import com.liferay.portal.kernel.dao.jdbc.SqlUpdate;
import com.liferay.portal.kernel.dao.jdbc.SqlUpdateFactoryUtil;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.module.framework.service.IdentifiableOSGiService;
import com.liferay.portal.kernel.service.BaseServiceImpl;
import com.liferay.portal.kernel.service.persistence.ClassNamePersistence;
import com.liferay.portal.kernel.service.persistence.UserPersistence;
import com.liferay.portal.kernel.util.PortalUtil;
import com.liferay.portal.spring.extender.service.ServiceReference;

import javax.sql.DataSource;

/**
 * Provides the base implementation for the testimonial ashok remote service.
 *
 * <p>
 * This implementation exists only as a container for the default service methods generated by ServiceBuilder. All custom service methods should be put in {@link com.ddt.service.impl.TestimonialAshokServiceImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see com.ddt.service.impl.TestimonialAshokServiceImpl
 * @see com.ddt.service.TestimonialAshokServiceUtil
 * @generated
 */
public abstract class TestimonialAshokServiceBaseImpl extends BaseServiceImpl
	implements TestimonialAshokService, IdentifiableOSGiService {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. Always use {@link com.ddt.service.TestimonialAshokServiceUtil} to access the testimonial ashok remote service.
	 */

	/**
	 * Returns the f a q s ashok local service.
	 *
	 * @return the f a q s ashok local service
	 */
	public com.ddt.service.FAQSAshokLocalService getFAQSAshokLocalService() {
		return faqsAshokLocalService;
	}

	/**
	 * Sets the f a q s ashok local service.
	 *
	 * @param faqsAshokLocalService the f a q s ashok local service
	 */
	public void setFAQSAshokLocalService(
		com.ddt.service.FAQSAshokLocalService faqsAshokLocalService) {
		this.faqsAshokLocalService = faqsAshokLocalService;
	}

	/**
	 * Returns the f a q s ashok remote service.
	 *
	 * @return the f a q s ashok remote service
	 */
	public com.ddt.service.FAQSAshokService getFAQSAshokService() {
		return faqsAshokService;
	}

	/**
	 * Sets the f a q s ashok remote service.
	 *
	 * @param faqsAshokService the f a q s ashok remote service
	 */
	public void setFAQSAshokService(
		com.ddt.service.FAQSAshokService faqsAshokService) {
		this.faqsAshokService = faqsAshokService;
	}

	/**
	 * Returns the f a q s ashok persistence.
	 *
	 * @return the f a q s ashok persistence
	 */
	public FAQSAshokPersistence getFAQSAshokPersistence() {
		return faqsAshokPersistence;
	}

	/**
	 * Sets the f a q s ashok persistence.
	 *
	 * @param faqsAshokPersistence the f a q s ashok persistence
	 */
	public void setFAQSAshokPersistence(
		FAQSAshokPersistence faqsAshokPersistence) {
		this.faqsAshokPersistence = faqsAshokPersistence;
	}

	/**
	 * Returns the loc_ course_ info local service.
	 *
	 * @return the loc_ course_ info local service
	 */
	public com.ddt.service.Loc_Course_InfoLocalService getLoc_Course_InfoLocalService() {
		return loc_Course_InfoLocalService;
	}

	/**
	 * Sets the loc_ course_ info local service.
	 *
	 * @param loc_Course_InfoLocalService the loc_ course_ info local service
	 */
	public void setLoc_Course_InfoLocalService(
		com.ddt.service.Loc_Course_InfoLocalService loc_Course_InfoLocalService) {
		this.loc_Course_InfoLocalService = loc_Course_InfoLocalService;
	}

	/**
	 * Returns the loc_ course_ info remote service.
	 *
	 * @return the loc_ course_ info remote service
	 */
	public com.ddt.service.Loc_Course_InfoService getLoc_Course_InfoService() {
		return loc_Course_InfoService;
	}

	/**
	 * Sets the loc_ course_ info remote service.
	 *
	 * @param loc_Course_InfoService the loc_ course_ info remote service
	 */
	public void setLoc_Course_InfoService(
		com.ddt.service.Loc_Course_InfoService loc_Course_InfoService) {
		this.loc_Course_InfoService = loc_Course_InfoService;
	}

	/**
	 * Returns the loc_ course_ info persistence.
	 *
	 * @return the loc_ course_ info persistence
	 */
	public Loc_Course_InfoPersistence getLoc_Course_InfoPersistence() {
		return loc_Course_InfoPersistence;
	}

	/**
	 * Sets the loc_ course_ info persistence.
	 *
	 * @param loc_Course_InfoPersistence the loc_ course_ info persistence
	 */
	public void setLoc_Course_InfoPersistence(
		Loc_Course_InfoPersistence loc_Course_InfoPersistence) {
		this.loc_Course_InfoPersistence = loc_Course_InfoPersistence;
	}

	/**
	 * Returns the news ashok local service.
	 *
	 * @return the news ashok local service
	 */
	public com.ddt.service.NewsAshokLocalService getNewsAshokLocalService() {
		return newsAshokLocalService;
	}

	/**
	 * Sets the news ashok local service.
	 *
	 * @param newsAshokLocalService the news ashok local service
	 */
	public void setNewsAshokLocalService(
		com.ddt.service.NewsAshokLocalService newsAshokLocalService) {
		this.newsAshokLocalService = newsAshokLocalService;
	}

	/**
	 * Returns the news ashok remote service.
	 *
	 * @return the news ashok remote service
	 */
	public com.ddt.service.NewsAshokService getNewsAshokService() {
		return newsAshokService;
	}

	/**
	 * Sets the news ashok remote service.
	 *
	 * @param newsAshokService the news ashok remote service
	 */
	public void setNewsAshokService(
		com.ddt.service.NewsAshokService newsAshokService) {
		this.newsAshokService = newsAshokService;
	}

	/**
	 * Returns the news ashok persistence.
	 *
	 * @return the news ashok persistence
	 */
	public NewsAshokPersistence getNewsAshokPersistence() {
		return newsAshokPersistence;
	}

	/**
	 * Sets the news ashok persistence.
	 *
	 * @param newsAshokPersistence the news ashok persistence
	 */
	public void setNewsAshokPersistence(
		NewsAshokPersistence newsAshokPersistence) {
		this.newsAshokPersistence = newsAshokPersistence;
	}

	/**
	 * Returns the testimonial ashok local service.
	 *
	 * @return the testimonial ashok local service
	 */
	public com.ddt.service.TestimonialAshokLocalService getTestimonialAshokLocalService() {
		return testimonialAshokLocalService;
	}

	/**
	 * Sets the testimonial ashok local service.
	 *
	 * @param testimonialAshokLocalService the testimonial ashok local service
	 */
	public void setTestimonialAshokLocalService(
		com.ddt.service.TestimonialAshokLocalService testimonialAshokLocalService) {
		this.testimonialAshokLocalService = testimonialAshokLocalService;
	}

	/**
	 * Returns the testimonial ashok remote service.
	 *
	 * @return the testimonial ashok remote service
	 */
	public TestimonialAshokService getTestimonialAshokService() {
		return testimonialAshokService;
	}

	/**
	 * Sets the testimonial ashok remote service.
	 *
	 * @param testimonialAshokService the testimonial ashok remote service
	 */
	public void setTestimonialAshokService(
		TestimonialAshokService testimonialAshokService) {
		this.testimonialAshokService = testimonialAshokService;
	}

	/**
	 * Returns the testimonial ashok persistence.
	 *
	 * @return the testimonial ashok persistence
	 */
	public TestimonialAshokPersistence getTestimonialAshokPersistence() {
		return testimonialAshokPersistence;
	}

	/**
	 * Sets the testimonial ashok persistence.
	 *
	 * @param testimonialAshokPersistence the testimonial ashok persistence
	 */
	public void setTestimonialAshokPersistence(
		TestimonialAshokPersistence testimonialAshokPersistence) {
		this.testimonialAshokPersistence = testimonialAshokPersistence;
	}

	/**
	 * Returns the counter local service.
	 *
	 * @return the counter local service
	 */
	public com.liferay.counter.kernel.service.CounterLocalService getCounterLocalService() {
		return counterLocalService;
	}

	/**
	 * Sets the counter local service.
	 *
	 * @param counterLocalService the counter local service
	 */
	public void setCounterLocalService(
		com.liferay.counter.kernel.service.CounterLocalService counterLocalService) {
		this.counterLocalService = counterLocalService;
	}

	/**
	 * Returns the class name local service.
	 *
	 * @return the class name local service
	 */
	public com.liferay.portal.kernel.service.ClassNameLocalService getClassNameLocalService() {
		return classNameLocalService;
	}

	/**
	 * Sets the class name local service.
	 *
	 * @param classNameLocalService the class name local service
	 */
	public void setClassNameLocalService(
		com.liferay.portal.kernel.service.ClassNameLocalService classNameLocalService) {
		this.classNameLocalService = classNameLocalService;
	}

	/**
	 * Returns the class name remote service.
	 *
	 * @return the class name remote service
	 */
	public com.liferay.portal.kernel.service.ClassNameService getClassNameService() {
		return classNameService;
	}

	/**
	 * Sets the class name remote service.
	 *
	 * @param classNameService the class name remote service
	 */
	public void setClassNameService(
		com.liferay.portal.kernel.service.ClassNameService classNameService) {
		this.classNameService = classNameService;
	}

	/**
	 * Returns the class name persistence.
	 *
	 * @return the class name persistence
	 */
	public ClassNamePersistence getClassNamePersistence() {
		return classNamePersistence;
	}

	/**
	 * Sets the class name persistence.
	 *
	 * @param classNamePersistence the class name persistence
	 */
	public void setClassNamePersistence(
		ClassNamePersistence classNamePersistence) {
		this.classNamePersistence = classNamePersistence;
	}

	/**
	 * Returns the resource local service.
	 *
	 * @return the resource local service
	 */
	public com.liferay.portal.kernel.service.ResourceLocalService getResourceLocalService() {
		return resourceLocalService;
	}

	/**
	 * Sets the resource local service.
	 *
	 * @param resourceLocalService the resource local service
	 */
	public void setResourceLocalService(
		com.liferay.portal.kernel.service.ResourceLocalService resourceLocalService) {
		this.resourceLocalService = resourceLocalService;
	}

	/**
	 * Returns the user local service.
	 *
	 * @return the user local service
	 */
	public com.liferay.portal.kernel.service.UserLocalService getUserLocalService() {
		return userLocalService;
	}

	/**
	 * Sets the user local service.
	 *
	 * @param userLocalService the user local service
	 */
	public void setUserLocalService(
		com.liferay.portal.kernel.service.UserLocalService userLocalService) {
		this.userLocalService = userLocalService;
	}

	/**
	 * Returns the user remote service.
	 *
	 * @return the user remote service
	 */
	public com.liferay.portal.kernel.service.UserService getUserService() {
		return userService;
	}

	/**
	 * Sets the user remote service.
	 *
	 * @param userService the user remote service
	 */
	public void setUserService(
		com.liferay.portal.kernel.service.UserService userService) {
		this.userService = userService;
	}

	/**
	 * Returns the user persistence.
	 *
	 * @return the user persistence
	 */
	public UserPersistence getUserPersistence() {
		return userPersistence;
	}

	/**
	 * Sets the user persistence.
	 *
	 * @param userPersistence the user persistence
	 */
	public void setUserPersistence(UserPersistence userPersistence) {
		this.userPersistence = userPersistence;
	}

	public void afterPropertiesSet() {
	}

	public void destroy() {
	}

	/**
	 * Returns the OSGi service identifier.
	 *
	 * @return the OSGi service identifier
	 */
	@Override
	public String getOSGiServiceIdentifier() {
		return TestimonialAshokService.class.getName();
	}

	protected Class<?> getModelClass() {
		return TestimonialAshok.class;
	}

	protected String getModelClassName() {
		return TestimonialAshok.class.getName();
	}

	/**
	 * Performs a SQL query.
	 *
	 * @param sql the sql query
	 */
	protected void runSQL(String sql) {
		try {
			DataSource dataSource = testimonialAshokPersistence.getDataSource();

			DB db = DBManagerUtil.getDB();

			sql = db.buildSQL(sql);
			sql = PortalUtil.transformSQL(sql);

			SqlUpdate sqlUpdate = SqlUpdateFactoryUtil.getSqlUpdate(dataSource,
					sql);

			sqlUpdate.update();
		}
		catch (Exception e) {
			throw new SystemException(e);
		}
	}

	@BeanReference(type = com.ddt.service.FAQSAshokLocalService.class)
	protected com.ddt.service.FAQSAshokLocalService faqsAshokLocalService;
	@BeanReference(type = com.ddt.service.FAQSAshokService.class)
	protected com.ddt.service.FAQSAshokService faqsAshokService;
	@BeanReference(type = FAQSAshokPersistence.class)
	protected FAQSAshokPersistence faqsAshokPersistence;
	@BeanReference(type = com.ddt.service.Loc_Course_InfoLocalService.class)
	protected com.ddt.service.Loc_Course_InfoLocalService loc_Course_InfoLocalService;
	@BeanReference(type = com.ddt.service.Loc_Course_InfoService.class)
	protected com.ddt.service.Loc_Course_InfoService loc_Course_InfoService;
	@BeanReference(type = Loc_Course_InfoPersistence.class)
	protected Loc_Course_InfoPersistence loc_Course_InfoPersistence;
	@BeanReference(type = com.ddt.service.NewsAshokLocalService.class)
	protected com.ddt.service.NewsAshokLocalService newsAshokLocalService;
	@BeanReference(type = com.ddt.service.NewsAshokService.class)
	protected com.ddt.service.NewsAshokService newsAshokService;
	@BeanReference(type = NewsAshokPersistence.class)
	protected NewsAshokPersistence newsAshokPersistence;
	@BeanReference(type = com.ddt.service.TestimonialAshokLocalService.class)
	protected com.ddt.service.TestimonialAshokLocalService testimonialAshokLocalService;
	@BeanReference(type = TestimonialAshokService.class)
	protected TestimonialAshokService testimonialAshokService;
	@BeanReference(type = TestimonialAshokPersistence.class)
	protected TestimonialAshokPersistence testimonialAshokPersistence;
	@ServiceReference(type = com.liferay.counter.kernel.service.CounterLocalService.class)
	protected com.liferay.counter.kernel.service.CounterLocalService counterLocalService;
	@ServiceReference(type = com.liferay.portal.kernel.service.ClassNameLocalService.class)
	protected com.liferay.portal.kernel.service.ClassNameLocalService classNameLocalService;
	@ServiceReference(type = com.liferay.portal.kernel.service.ClassNameService.class)
	protected com.liferay.portal.kernel.service.ClassNameService classNameService;
	@ServiceReference(type = ClassNamePersistence.class)
	protected ClassNamePersistence classNamePersistence;
	@ServiceReference(type = com.liferay.portal.kernel.service.ResourceLocalService.class)
	protected com.liferay.portal.kernel.service.ResourceLocalService resourceLocalService;
	@ServiceReference(type = com.liferay.portal.kernel.service.UserLocalService.class)
	protected com.liferay.portal.kernel.service.UserLocalService userLocalService;
	@ServiceReference(type = com.liferay.portal.kernel.service.UserService.class)
	protected com.liferay.portal.kernel.service.UserService userService;
	@ServiceReference(type = UserPersistence.class)
	protected UserPersistence userPersistence;
}