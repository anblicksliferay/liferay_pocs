/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.MappingServices.model.impl;

import aQute.bnd.annotation.ProviderType;

import com.MappingServices.model.Enquiry;
import com.MappingServices.model.EnquiryModel;
import com.MappingServices.model.EnquirySoap;

import com.liferay.expando.kernel.model.ExpandoBridge;
import com.liferay.expando.kernel.util.ExpandoBridgeFactoryUtil;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.service.ServiceContext;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the Enquiry service. Represents a row in the &quot;Ashokleyland_Enquiry&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link EnquiryModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link EnquiryImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see EnquiryImpl
 * @see Enquiry
 * @see EnquiryModel
 * @generated
 */
@JSON(strict = true)
@ProviderType
public class EnquiryModelImpl extends BaseModelImpl<Enquiry>
	implements EnquiryModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a enquiry model instance should use the {@link Enquiry} interface instead.
	 */
	public static final String TABLE_NAME = "Ashokleyland_Enquiry";
	public static final Object[][] TABLE_COLUMNS = {
			{ "uuid_", Types.VARCHAR },
			{ "Eid", Types.BIGINT },
			{ "FirstName", Types.VARCHAR },
			{ "LastName", Types.VARCHAR },
			{ "Email", Types.VARCHAR },
			{ "ContactNumber", Types.VARCHAR },
			{ "PartName", Types.VARCHAR },
			{ "PartNumber", Types.VARCHAR },
			{ "Message", Types.VARCHAR },
			{ "createDate", Types.TIMESTAMP },
			{ "modifiedDate", Types.TIMESTAMP }
		};
	public static final Map<String, Integer> TABLE_COLUMNS_MAP = new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("uuid_", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("Eid", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("FirstName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("LastName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("Email", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("ContactNumber", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("PartName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("PartNumber", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("Message", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("createDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("modifiedDate", Types.TIMESTAMP);
	}

	public static final String TABLE_SQL_CREATE = "create table Ashokleyland_Enquiry (uuid_ VARCHAR(75) null,Eid LONG not null primary key,FirstName VARCHAR(75) null,LastName VARCHAR(75) null,Email VARCHAR(75) null,ContactNumber VARCHAR(75) null,PartName VARCHAR(75) null,PartNumber VARCHAR(75) null,Message VARCHAR(75) null,createDate DATE null,modifiedDate DATE null)";
	public static final String TABLE_SQL_DROP = "drop table Ashokleyland_Enquiry";
	public static final String ORDER_BY_JPQL = " ORDER BY enquiry.Eid ASC";
	public static final String ORDER_BY_SQL = " ORDER BY Ashokleyland_Enquiry.Eid ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.MappingServices.service.util.ServiceProps.get(
				"value.object.entity.cache.enabled.com.MappingServices.model.Enquiry"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.MappingServices.service.util.ServiceProps.get(
				"value.object.finder.cache.enabled.com.MappingServices.model.Enquiry"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.MappingServices.service.util.ServiceProps.get(
				"value.object.column.bitmask.enabled.com.MappingServices.model.Enquiry"),
			true);
	public static final long UUID_COLUMN_BITMASK = 1L;
	public static final long EID_COLUMN_BITMASK = 2L;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static Enquiry toModel(EnquirySoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		Enquiry model = new EnquiryImpl();

		model.setUuid(soapModel.getUuid());
		model.setEid(soapModel.getEid());
		model.setFirstName(soapModel.getFirstName());
		model.setLastName(soapModel.getLastName());
		model.setEmail(soapModel.getEmail());
		model.setContactNumber(soapModel.getContactNumber());
		model.setPartName(soapModel.getPartName());
		model.setPartNumber(soapModel.getPartNumber());
		model.setMessage(soapModel.getMessage());
		model.setCreateDate(soapModel.getCreateDate());
		model.setModifiedDate(soapModel.getModifiedDate());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<Enquiry> toModels(EnquirySoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<Enquiry> models = new ArrayList<Enquiry>(soapModels.length);

		for (EnquirySoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.MappingServices.service.util.ServiceProps.get(
				"lock.expiration.time.com.MappingServices.model.Enquiry"));

	public EnquiryModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _Eid;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setEid(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _Eid;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return Enquiry.class;
	}

	@Override
	public String getModelClassName() {
		return Enquiry.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("uuid", getUuid());
		attributes.put("Eid", getEid());
		attributes.put("FirstName", getFirstName());
		attributes.put("LastName", getLastName());
		attributes.put("Email", getEmail());
		attributes.put("ContactNumber", getContactNumber());
		attributes.put("PartName", getPartName());
		attributes.put("PartNumber", getPartNumber());
		attributes.put("Message", getMessage());
		attributes.put("createDate", getCreateDate());
		attributes.put("modifiedDate", getModifiedDate());

		attributes.put("entityCacheEnabled", isEntityCacheEnabled());
		attributes.put("finderCacheEnabled", isFinderCacheEnabled());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		String uuid = (String)attributes.get("uuid");

		if (uuid != null) {
			setUuid(uuid);
		}

		Long Eid = (Long)attributes.get("Eid");

		if (Eid != null) {
			setEid(Eid);
		}

		String FirstName = (String)attributes.get("FirstName");

		if (FirstName != null) {
			setFirstName(FirstName);
		}

		String LastName = (String)attributes.get("LastName");

		if (LastName != null) {
			setLastName(LastName);
		}

		String Email = (String)attributes.get("Email");

		if (Email != null) {
			setEmail(Email);
		}

		String ContactNumber = (String)attributes.get("ContactNumber");

		if (ContactNumber != null) {
			setContactNumber(ContactNumber);
		}

		String PartName = (String)attributes.get("PartName");

		if (PartName != null) {
			setPartName(PartName);
		}

		String PartNumber = (String)attributes.get("PartNumber");

		if (PartNumber != null) {
			setPartNumber(PartNumber);
		}

		String Message = (String)attributes.get("Message");

		if (Message != null) {
			setMessage(Message);
		}

		Date createDate = (Date)attributes.get("createDate");

		if (createDate != null) {
			setCreateDate(createDate);
		}

		Date modifiedDate = (Date)attributes.get("modifiedDate");

		if (modifiedDate != null) {
			setModifiedDate(modifiedDate);
		}
	}

	@JSON
	@Override
	public String getUuid() {
		if (_uuid == null) {
			return StringPool.BLANK;
		}
		else {
			return _uuid;
		}
	}

	@Override
	public void setUuid(String uuid) {
		if (_originalUuid == null) {
			_originalUuid = _uuid;
		}

		_uuid = uuid;
	}

	public String getOriginalUuid() {
		return GetterUtil.getString(_originalUuid);
	}

	@JSON
	@Override
	public long getEid() {
		return _Eid;
	}

	@Override
	public void setEid(long Eid) {
		_Eid = Eid;
	}

	@JSON
	@Override
	public String getFirstName() {
		if (_FirstName == null) {
			return StringPool.BLANK;
		}
		else {
			return _FirstName;
		}
	}

	@Override
	public void setFirstName(String FirstName) {
		_FirstName = FirstName;
	}

	@JSON
	@Override
	public String getLastName() {
		if (_LastName == null) {
			return StringPool.BLANK;
		}
		else {
			return _LastName;
		}
	}

	@Override
	public void setLastName(String LastName) {
		_LastName = LastName;
	}

	@JSON
	@Override
	public String getEmail() {
		if (_Email == null) {
			return StringPool.BLANK;
		}
		else {
			return _Email;
		}
	}

	@Override
	public void setEmail(String Email) {
		_Email = Email;
	}

	@JSON
	@Override
	public String getContactNumber() {
		if (_ContactNumber == null) {
			return StringPool.BLANK;
		}
		else {
			return _ContactNumber;
		}
	}

	@Override
	public void setContactNumber(String ContactNumber) {
		_ContactNumber = ContactNumber;
	}

	@JSON
	@Override
	public String getPartName() {
		if (_PartName == null) {
			return StringPool.BLANK;
		}
		else {
			return _PartName;
		}
	}

	@Override
	public void setPartName(String PartName) {
		_PartName = PartName;
	}

	@JSON
	@Override
	public String getPartNumber() {
		if (_PartNumber == null) {
			return StringPool.BLANK;
		}
		else {
			return _PartNumber;
		}
	}

	@Override
	public void setPartNumber(String PartNumber) {
		_PartNumber = PartNumber;
	}

	@JSON
	@Override
	public String getMessage() {
		if (_Message == null) {
			return StringPool.BLANK;
		}
		else {
			return _Message;
		}
	}

	@Override
	public void setMessage(String Message) {
		_Message = Message;
	}

	@JSON
	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		_createDate = createDate;
	}

	@JSON
	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	public boolean hasSetModifiedDate() {
		return _setModifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_setModifiedDate = true;

		_modifiedDate = modifiedDate;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(0,
			Enquiry.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public Enquiry toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (Enquiry)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		EnquiryImpl enquiryImpl = new EnquiryImpl();

		enquiryImpl.setUuid(getUuid());
		enquiryImpl.setEid(getEid());
		enquiryImpl.setFirstName(getFirstName());
		enquiryImpl.setLastName(getLastName());
		enquiryImpl.setEmail(getEmail());
		enquiryImpl.setContactNumber(getContactNumber());
		enquiryImpl.setPartName(getPartName());
		enquiryImpl.setPartNumber(getPartNumber());
		enquiryImpl.setMessage(getMessage());
		enquiryImpl.setCreateDate(getCreateDate());
		enquiryImpl.setModifiedDate(getModifiedDate());

		enquiryImpl.resetOriginalValues();

		return enquiryImpl;
	}

	@Override
	public int compareTo(Enquiry enquiry) {
		long primaryKey = enquiry.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof Enquiry)) {
			return false;
		}

		Enquiry enquiry = (Enquiry)obj;

		long primaryKey = enquiry.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public boolean isEntityCacheEnabled() {
		return ENTITY_CACHE_ENABLED;
	}

	@Override
	public boolean isFinderCacheEnabled() {
		return FINDER_CACHE_ENABLED;
	}

	@Override
	public void resetOriginalValues() {
		EnquiryModelImpl enquiryModelImpl = this;

		enquiryModelImpl._originalUuid = enquiryModelImpl._uuid;

		enquiryModelImpl._setModifiedDate = false;

		enquiryModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<Enquiry> toCacheModel() {
		EnquiryCacheModel enquiryCacheModel = new EnquiryCacheModel();

		enquiryCacheModel.uuid = getUuid();

		String uuid = enquiryCacheModel.uuid;

		if ((uuid != null) && (uuid.length() == 0)) {
			enquiryCacheModel.uuid = null;
		}

		enquiryCacheModel.Eid = getEid();

		enquiryCacheModel.FirstName = getFirstName();

		String FirstName = enquiryCacheModel.FirstName;

		if ((FirstName != null) && (FirstName.length() == 0)) {
			enquiryCacheModel.FirstName = null;
		}

		enquiryCacheModel.LastName = getLastName();

		String LastName = enquiryCacheModel.LastName;

		if ((LastName != null) && (LastName.length() == 0)) {
			enquiryCacheModel.LastName = null;
		}

		enquiryCacheModel.Email = getEmail();

		String Email = enquiryCacheModel.Email;

		if ((Email != null) && (Email.length() == 0)) {
			enquiryCacheModel.Email = null;
		}

		enquiryCacheModel.ContactNumber = getContactNumber();

		String ContactNumber = enquiryCacheModel.ContactNumber;

		if ((ContactNumber != null) && (ContactNumber.length() == 0)) {
			enquiryCacheModel.ContactNumber = null;
		}

		enquiryCacheModel.PartName = getPartName();

		String PartName = enquiryCacheModel.PartName;

		if ((PartName != null) && (PartName.length() == 0)) {
			enquiryCacheModel.PartName = null;
		}

		enquiryCacheModel.PartNumber = getPartNumber();

		String PartNumber = enquiryCacheModel.PartNumber;

		if ((PartNumber != null) && (PartNumber.length() == 0)) {
			enquiryCacheModel.PartNumber = null;
		}

		enquiryCacheModel.Message = getMessage();

		String Message = enquiryCacheModel.Message;

		if ((Message != null) && (Message.length() == 0)) {
			enquiryCacheModel.Message = null;
		}

		Date createDate = getCreateDate();

		if (createDate != null) {
			enquiryCacheModel.createDate = createDate.getTime();
		}
		else {
			enquiryCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			enquiryCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			enquiryCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		return enquiryCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(23);

		sb.append("{uuid=");
		sb.append(getUuid());
		sb.append(", Eid=");
		sb.append(getEid());
		sb.append(", FirstName=");
		sb.append(getFirstName());
		sb.append(", LastName=");
		sb.append(getLastName());
		sb.append(", Email=");
		sb.append(getEmail());
		sb.append(", ContactNumber=");
		sb.append(getContactNumber());
		sb.append(", PartName=");
		sb.append(getPartName());
		sb.append(", PartNumber=");
		sb.append(getPartNumber());
		sb.append(", Message=");
		sb.append(getMessage());
		sb.append(", createDate=");
		sb.append(getCreateDate());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(37);

		sb.append("<model><model-name>");
		sb.append("com.MappingServices.model.Enquiry");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>uuid</column-name><column-value><![CDATA[");
		sb.append(getUuid());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>Eid</column-name><column-value><![CDATA[");
		sb.append(getEid());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>FirstName</column-name><column-value><![CDATA[");
		sb.append(getFirstName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>LastName</column-name><column-value><![CDATA[");
		sb.append(getLastName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>Email</column-name><column-value><![CDATA[");
		sb.append(getEmail());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>ContactNumber</column-name><column-value><![CDATA[");
		sb.append(getContactNumber());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>PartName</column-name><column-value><![CDATA[");
		sb.append(getPartName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>PartNumber</column-name><column-value><![CDATA[");
		sb.append(getPartNumber());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>Message</column-name><column-value><![CDATA[");
		sb.append(getMessage());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createDate</column-name><column-value><![CDATA[");
		sb.append(getCreateDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static final ClassLoader _classLoader = Enquiry.class.getClassLoader();
	private static final Class<?>[] _escapedModelInterfaces = new Class[] {
			Enquiry.class
		};
	private String _uuid;
	private String _originalUuid;
	private long _Eid;
	private String _FirstName;
	private String _LastName;
	private String _Email;
	private String _ContactNumber;
	private String _PartName;
	private String _PartNumber;
	private String _Message;
	private Date _createDate;
	private Date _modifiedDate;
	private boolean _setModifiedDate;
	private long _columnBitmask;
	private Enquiry _escapedModel;
}